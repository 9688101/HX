{"version":3,"file":"static/js/516.b5a9813a.chunk.js","mappings":"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","sources":["views/Channel/component/ResponseTimeLabel.js","views/Channel/component/GroupLabel.js","views/Channel/component/NameLabel.js","views/Channel/component/TableRow.js","views/Channel/component/TableHead.js","../node_modules/@tabler/icons-react/src/icons/IconBrandSpeedtest.js","../node_modules/@tabler/icons-react/src/icons/IconHttpDelete.js","../node_modules/@tabler/icons-react/src/icons/IconCoinYuan.js","views/Channel/type/Config.js","views/Channel/component/EditModal.js","views/Channel/index.js","ui-component/Label.js","constants/CommonConstants.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","ui-component/TableToolBar.js","../node_modules/@mui/icons-material/CheckBox.js","../node_modules/@mui/material/TextField/textFieldClasses.js","../node_modules/@mui/material/TextField/TextField.js","constants/ChannelConstants.js","ui-component/Switch.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport Label from 'ui-component/Label';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { timestamp2string } from 'utils/common';\r\n\r\nconst ResponseTimeLabel = ({ test_time, response_time, handle_action }) => {\r\n  let color = 'default';\r\n  let time = response_time / 1000;\r\n  time = time.toFixed(2) + ' 秒';\r\n\r\n  if (response_time === 0) {\r\n    color = 'default';\r\n  } else if (response_time <= 1000) {\r\n    color = 'success';\r\n  } else if (response_time <= 3000) {\r\n    color = 'primary';\r\n  } else if (response_time <= 5000) {\r\n    color = 'secondary';\r\n  } else {\r\n    color = 'error';\r\n  }\r\n  let title = (\r\n    <>\r\n      点击测速\r\n      <br />\r\n      {test_time != 0 ? '上次测速时间：' + timestamp2string(test_time) : '未测试'}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Tooltip title={title} placement=\"top\" onClick={handle_action}>\r\n      <Label color={color}> {response_time == 0 ? '未测试' : time} </Label>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nResponseTimeLabel.propTypes = {\r\n  test_time: PropTypes.number,\r\n  response_time: PropTypes.number,\r\n  handle_action: PropTypes.func\r\n};\r\n\r\nexport default ResponseTimeLabel;\r\n","import PropTypes from \"prop-types\";\r\nimport Label from \"ui-component/Label\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nfunction name2color(name) {\r\n  switch (name) {\r\n    case \"default\":\r\n      return \"info\";\r\n    case \"vip\":\r\n      return \"warning\"\r\n    case \"svip\":\r\n      return \"error\"\r\n    default:\r\n      return \"info\"\r\n  }\r\n}\r\n\r\nconst GroupLabel = ({ group }) => {\r\n  let groups = [];\r\n  if (group === \"\") {\r\n    groups = [\"default\"];\r\n  } else {\r\n    groups = group.split(\",\");\r\n    groups.sort();\r\n  }\r\n  return (\r\n    <Stack divider={<Divider orientation=\"vertical\" flexItem />} spacing={0.5}>\r\n      {groups.map((group, index) => {\r\n        return <Label key={index} color={name2color(group)}>{group}</Label>;\r\n      })}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nGroupLabel.propTypes = {\r\n  group: PropTypes.string,\r\n};\r\n\r\nexport default GroupLabel;\r\n","import PropTypes from 'prop-types';\r\nimport { Tooltip, Stack, Container } from '@mui/material';\r\nimport Label from 'ui-component/Label';\r\nimport { styled } from '@mui/material/styles';\r\nimport { showSuccess, copy } from 'utils/common';\r\n\r\nconst TooltipContainer = styled(Container)({\r\n  maxHeight: '250px',\r\n  overflow: 'auto',\r\n  '&::-webkit-scrollbar': {\r\n    width: '0px' // Set the width to 0 to hide the scrollbar\r\n  }\r\n});\r\n\r\nconst NameLabel = ({ name, models }) => {\r\n  let modelMap = [];\r\n  modelMap = models.split(',');\r\n  modelMap.sort();\r\n\r\n  return (\r\n    <Tooltip\r\n      title={\r\n        <TooltipContainer>\r\n          <Stack spacing={1}>\r\n            {modelMap.map((item, index) => {\r\n              return (\r\n                <Label\r\n                  variant=\"ghost\"\r\n                  key={index}\r\n                  onClick={() => {\r\n                    copy(item, '模型名称');\r\n                  }}\r\n                >\r\n                  {item}\r\n                </Label>\r\n              );\r\n            })}\r\n          </Stack>\r\n        </TooltipContainer>\r\n      }\r\n      placement=\"top\"\r\n    >\r\n      <span>{name}</span>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nNameLabel.propTypes = {\r\n  name: PropTypes.string,\r\n  models: PropTypes.string\r\n};\r\n\r\nexport default NameLabel;\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nimport { showInfo, showError, renderNumber } from \"utils/common\";\r\nimport { API } from \"utils/api\";\r\nimport { CHANNEL_OPTIONS } from \"constants/ChannelConstants\";\r\n\r\nimport {\r\n  Popover,\r\n  TableRow,\r\n  MenuItem,\r\n  TableCell,\r\n  IconButton,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Tooltip,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nimport Label from \"ui-component/Label\";\r\nimport TableSwitch from \"ui-component/Switch\";\r\n\r\nimport ResponseTimeLabel from \"./ResponseTimeLabel\";\r\nimport GroupLabel from \"./GroupLabel\";\r\nimport NameLabel from \"./NameLabel\";\r\n\r\nimport { IconDotsVertical, IconEdit, IconTrash } from \"@tabler/icons-react\";\r\n\r\nexport default function ChannelTableRow({\r\n  item,\r\n  manageChannel,\r\n  handleOpenModal,\r\n  setModalChannelId,\r\n}) {\r\n  const [open, setOpen] = useState(null);\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [statusSwitch, setStatusSwitch] = useState(item.status);\r\n  const [priorityValve, setPriority] = useState(item.priority);\r\n  const [responseTimeData, setResponseTimeData] = useState({\r\n    test_time: item.test_time,\r\n    response_time: item.response_time,\r\n  });\r\n  const [itemBalance, setItemBalance] = useState(item.balance);\r\n\r\n  const handleDeleteOpen = () => {\r\n    handleCloseMenu();\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const handleDeleteClose = () => {\r\n    setOpenDelete(false);\r\n  };\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleStatus = async () => {\r\n    const switchVlue = statusSwitch === 1 ? 2 : 1;\r\n    const { success } = await manageChannel(item.id, \"status\", switchVlue);\r\n    if (success) {\r\n      setStatusSwitch(switchVlue);\r\n    }\r\n  };\r\n\r\n  const handlePriority = async (event) => {\r\n    const currentValue = parseInt(event.target.value);\r\n    if (isNaN(currentValue) || currentValue === priorityValve) {\r\n      return;\r\n    }\r\n\r\n    if (currentValue < 0) {\r\n      showError(\"优先级不能小于 0\");\r\n      return;\r\n    }\r\n\r\n    await manageChannel(item.id, \"priority\", currentValue);\r\n    setPriority(currentValue);\r\n  };\r\n\r\n  const handleResponseTime = async () => {\r\n    const { success, time } = await manageChannel(item.id, \"test\", \"\");\r\n    if (success) {\r\n      setResponseTimeData({\r\n        test_time: Date.now() / 1000,\r\n        response_time: time * 1000,\r\n      });\r\n      showInfo(`渠道 ${item.name} 测试成功，耗时 ${time.toFixed(2)} 秒。`);\r\n    }\r\n  };\r\n\r\n  const updateChannelBalance = async () => {\r\n    const res = await API.get(`/api/channel/update_balance/${item.id}`);\r\n    const { success, message, balance } = res.data;\r\n    if (success) {\r\n      setItemBalance(balance);\r\n\r\n      showInfo(`余额更新成功！`);\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    handleCloseMenu();\r\n    await manageChannel(item.id, \"delete\", \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow tabIndex={item.id}>\r\n        <TableCell>{item.id}</TableCell>\r\n\r\n        <TableCell>\r\n          <NameLabel name={item.name} models={item.models} />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <GroupLabel group={item.group} />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          {!CHANNEL_OPTIONS[item.type] ? (\r\n            <Label color=\"error\" variant=\"outlined\">\r\n              未知\r\n            </Label>\r\n          ) : (\r\n            <Label color={CHANNEL_OPTIONS[item.type].color} variant=\"outlined\">\r\n              {CHANNEL_OPTIONS[item.type].text}\r\n            </Label>\r\n          )}\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <Tooltip\r\n            title={(() => {\r\n              switch (statusSwitch) {\r\n                case 1:\r\n                  return \"已启用\";\r\n                case 2:\r\n                  return \"本渠道被手动禁用\";\r\n                case 3:\r\n                  return \"本渠道被程序自动禁用\";\r\n                default:\r\n                  return \"未知\";\r\n              }\r\n            })()}\r\n            placement=\"top\"\r\n          >\r\n            <TableSwitch\r\n              id={`switch-${item.id}`}\r\n              checked={statusSwitch === 1}\r\n              onChange={handleStatus}\r\n            />\r\n          </Tooltip>\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <ResponseTimeLabel\r\n            test_time={responseTimeData.test_time}\r\n            response_time={responseTimeData.response_time}\r\n            handle_action={handleResponseTime}\r\n          />\r\n        </TableCell>\r\n        <TableCell>{renderNumber(item.used_quota)}</TableCell>\r\n        <TableCell>\r\n          <Tooltip\r\n            title={\"点击更新余额\"}\r\n            placement=\"top\"\r\n            onClick={updateChannelBalance}\r\n          >\r\n            {renderBalance(item.type, itemBalance)}\r\n          </Tooltip>\r\n        </TableCell>\r\n        <TableCell>\r\n          <TextField\r\n            id={`priority-${item.id}`}\r\n            onBlur={handlePriority}\r\n            type=\"number\"\r\n            label=\"优先级\"\r\n            variant=\"standard\"\r\n            defaultValue={item.priority}\r\n            inputProps={{ min: \"0\" }}\r\n            sx={{ width: 80 }}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell>\r\n          <IconButton\r\n            onClick={handleOpenMenu}\r\n            sx={{ color: \"rgb(99, 115, 129)\" }}\r\n          >\r\n            <IconDotsVertical />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\r\n        transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        PaperProps={{\r\n          sx: { width: 140 },\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleCloseMenu();\r\n            handleOpenModal();\r\n            setModalChannelId(item.id);\r\n          }}\r\n        >\r\n          <IconEdit style={{ marginRight: \"16px\" }} />\r\n          编辑\r\n        </MenuItem>\r\n        <MenuItem onClick={handleDeleteOpen} sx={{ color: \"error.main\" }}>\r\n          <IconTrash style={{ marginRight: \"16px\" }} />\r\n          删除\r\n        </MenuItem>\r\n      </Popover>\r\n\r\n      <Dialog open={openDelete} onClose={handleDeleteClose}>\r\n        <DialogTitle>删除渠道</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>是否删除渠道 {item.name}？</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteClose}>关闭</Button>\r\n          <Button onClick={handleDelete} sx={{ color: \"error.main\" }} autoFocus>\r\n            删除\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nChannelTableRow.propTypes = {\r\n  item: PropTypes.object,\r\n  manageChannel: PropTypes.func,\r\n  handleOpenModal: PropTypes.func,\r\n  setModalChannelId: PropTypes.func,\r\n};\r\n\r\nfunction renderBalance(type, balance) {\r\n  switch (type) {\r\n    case 1: // OpenAI\r\n      return <span>${balance.toFixed(2)}</span>;\r\n    case 4: // CloseAI\r\n      return <span>¥{balance.toFixed(2)}</span>;\r\n    case 8: // 自定义\r\n      return <span>${balance.toFixed(2)}</span>;\r\n    case 5: // OpenAI-SB\r\n      return <span>¥{(balance / 10000).toFixed(2)}</span>;\r\n    case 10: // AI Proxy\r\n      return <span>{renderNumber(balance)}</span>;\r\n    case 12: // API2GPT\r\n      return <span>¥{balance.toFixed(2)}</span>;\r\n    case 13: // AIGC2D\r\n      return <span>{renderNumber(balance)}</span>;\r\n    case 36: // DeepSeek\r\n      return <span>¥{balance.toFixed(2)}</span>;\r\n    case 44: // SiliconFlow\r\n      return <span>¥{balance.toFixed(2)}</span>;\r\n    default:\r\n      return <span>不支持</span>;\r\n  }\r\n}\r\n","import { TableCell, TableHead, TableRow } from '@mui/material';\r\n\r\nconst ChannelTableHead = () => {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell>ID</TableCell>\r\n        <TableCell>名称</TableCell>\r\n        <TableCell>分组</TableCell>\r\n        <TableCell>类型</TableCell>\r\n        <TableCell>状态</TableCell>\r\n        <TableCell>响应时间</TableCell>\r\n        <TableCell>已消耗</TableCell>\r\n        <TableCell>余额</TableCell>\r\n        <TableCell>优先级</TableCell>\r\n        <TableCell>操作</TableCell>\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nexport default ChannelTableHead;\r\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('brand-speedtest', 'IconBrandSpeedtest', [\n  ['path', { d: 'M5.636 19.364a9 9 0 1 1 12.728 0', key: 'svg-0' }],\n  ['path', { d: 'M16 9l-4 4', key: 'svg-1' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('http-delete', 'IconHttpDelete', [\n  [\n    'path',\n    { d: 'M3 8v8h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-2z', key: 'svg-0' },\n  ],\n  ['path', { d: 'M14 8h-4v8h4', key: 'svg-1' }],\n  ['path', { d: 'M10 12h2.5', key: 'svg-2' }],\n  ['path', { d: 'M17 8v8h4', key: 'svg-3' }],\n]);\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('coin-yuan', 'IconCoinYuan', [\n  ['path', { d: 'M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0', key: 'svg-0' }],\n  ['path', { d: 'M9 13h6', key: 'svg-1' }],\n  ['path', { d: 'M9 8l3 4.5', key: 'svg-2' }],\n  ['path', { d: 'M15 8l-3 4.5v4.5', key: 'svg-3' }],\n]);\n","const defaultConfig = {\r\n  input: {\r\n    name: '',\r\n    type: 1,\r\n    key: '',\r\n    base_url: '',\r\n    other: '',\r\n    model_mapping: '',\r\n    models: [],\r\n    groups: ['default'],\r\n    config: {}\r\n  },\r\n  inputLabel: {\r\n    name: '渠道名称',\r\n    type: '渠道类型',\r\n    base_url: '渠道API地址',\r\n    key: '密钥',\r\n    other: '其他参数',\r\n    models: '模型',\r\n    model_mapping: '模型映射关系',\r\n    system_prompt: '系统提示词',\r\n    groups: '用户组',\r\n    config: null\r\n  },\r\n  prompt: {\r\n    type: '请选择渠道类型',\r\n    name: '请为渠道命名',\r\n    base_url: '可空，请输入中转API地址，例如通过cloudflare中转',\r\n    key: '请输入渠道对应的鉴权密钥',\r\n    other: '',\r\n    models: '请选择该渠道所支持的模型',\r\n    model_mapping:\r\n      '请输入要修改的模型映射关系，格式为：api请求模型ID:实际转发给渠道的模型ID，使用JSON数组表示，例如：{\"gpt-3.5\": \"gpt-35\"}',\r\n    system_prompt:\"此项可选，用于强制设置给定的系统提示词，请配合自定义模型 & 模型重定向使用，首先创建一个唯一的自定义模型名称并在上面填入，之后将该自定义模型重定向映射到该渠道一个原生支持的模型此项可选，用于强制设置给定的系统提示词，请配合自定义模型 & 模型重定向使用，首先创建一个唯一的自定义模型名称并在上面填入，之后将该自定义模型重定向映射到该渠道一个原生支持的模型\",\r\n    groups: '请选择该渠道所支持的用户组',\r\n    config: null\r\n  },\r\n  modelGroup: 'openai'\r\n};\r\n\r\nconst typeConfig = {\r\n  3: {\r\n    inputLabel: {\r\n      base_url: 'AZURE_OPENAI_ENDPOINT',\r\n      other: '默认 API 版本'\r\n    },\r\n    prompt: {\r\n      base_url: '请填写AZURE_OPENAI_ENDPOINT',\r\n      other: '请输入默认API版本，例如：2024-03-01-preview'\r\n    }\r\n  },\r\n  11: {\r\n    input: {\r\n      models: ['PaLM-2']\r\n    },\r\n    modelGroup: 'google palm'\r\n  },\r\n  14: {\r\n    input: {\r\n      models: ['claude-instant-1', 'claude-2', 'claude-2.0', 'claude-2.1']\r\n    },\r\n    modelGroup: 'anthropic'\r\n  },\r\n  15: {\r\n    input: {\r\n      models: ['ERNIE-Bot', 'ERNIE-Bot-turbo', 'ERNIE-Bot-4', 'Embedding-V1']\r\n    },\r\n    prompt: {\r\n      key: '按照如下格式输入：APIKey|SecretKey'\r\n    },\r\n    modelGroup: 'baidu'\r\n  },\r\n  16: {\r\n    input: {\r\n      models: ['glm-4', 'glm-4v', 'glm-3-turbo', 'chatglm_turbo', 'chatglm_pro', 'chatglm_std', 'chatglm_lite']\r\n    },\r\n    modelGroup: 'zhipu'\r\n  },\r\n  17: {\r\n    inputLabel: {\r\n      other: '插件参数'\r\n    },\r\n    input: {\r\n      models: ['qwen-turbo', 'qwen-plus', 'qwen-max', 'qwen-max-longcontext', 'text-embedding-v1']\r\n    },\r\n    prompt: {\r\n      other: '请输入插件参数，即 X-DashScope-Plugin 请求头的取值'\r\n    },\r\n    modelGroup: 'ali'\r\n  },\r\n  18: {\r\n    inputLabel: {\r\n      other: '版本号'\r\n    },\r\n    input: {\r\n      models: ['SparkDesk', 'SparkDesk-v1.1', 'SparkDesk-v2.1', 'SparkDesk-v3.1', 'SparkDesk-v3.1-128K', 'SparkDesk-v3.5', 'SparkDesk-v3.5-32K', 'SparkDesk-v4.0']\r\n    },\r\n    prompt: {\r\n      key: '按照如下格式输入：APPID|APISecret|APIKey',\r\n      other: '请输入版本号，例如：v3.1'\r\n    },\r\n    modelGroup: 'xunfei'\r\n  },\r\n  19: {\r\n    input: {\r\n      models: ['360GPT_S2_V9', 'embedding-bert-512-v1', 'embedding_s1_v1', 'semantic_similarity_s1_v1']\r\n    },\r\n    modelGroup: '360'\r\n  },\r\n  22: {\r\n    prompt: {\r\n      key: '按照如下格式输入：APIKey-AppId，例如：fastgpt-0sp2gtvfdgyi4k30jwlgwf1i-64f335d84283f05518e9e041'\r\n    }\r\n  },\r\n  23: {\r\n    input: {\r\n      models: ['hunyuan']\r\n    },\r\n    prompt: {\r\n      key: '按照如下格式输入：AppId|SecretId|SecretKey'\r\n    },\r\n    modelGroup: 'tencent'\r\n  },\r\n  24: {\r\n    inputLabel: {\r\n      other: '版本号'\r\n    },\r\n    input: {\r\n      models: ['gemini-pro']\r\n    },\r\n    prompt: {\r\n      other: '请输入版本号，例如：v1'\r\n    },\r\n    modelGroup: 'google gemini'\r\n  },\r\n  25: {\r\n    input: {\r\n      models: ['moonshot-v1-8k', 'moonshot-v1-32k', 'moonshot-v1-128k']\r\n    },\r\n    modelGroup: 'moonshot'\r\n  },\r\n  26: {\r\n    input: {\r\n      models: ['Baichuan2-Turbo', 'Baichuan2-Turbo-192k', 'Baichuan-Text-Embedding']\r\n    },\r\n    modelGroup: 'baichuan'\r\n  },\r\n  27: {\r\n    input: {\r\n      models: ['abab5.5s-chat', 'abab5.5-chat', 'abab6-chat']\r\n    },\r\n    modelGroup: 'minimax'\r\n  },\r\n  29: {\r\n    modelGroup: 'groq'\r\n  },\r\n  30: {\r\n    modelGroup: 'ollama'\r\n  },\r\n  31: {\r\n    modelGroup: 'lingyiwanwu'\r\n  },\r\n  33: {\r\n    inputLabel: {\r\n      key: '',\r\n      config: {\r\n        region: 'Region',\r\n        ak: 'Access Key',\r\n        sk: 'Secret Key'\r\n      }\r\n    },\r\n    prompt: {\r\n      key: '',\r\n      config: {\r\n        region: 'region，e.g. us-west-2',\r\n        ak: 'AWS IAM Access Key',\r\n        sk: 'AWS IAM Secret Key'\r\n      }\r\n    },\r\n    modelGroup: 'anthropic'\r\n  },\r\n  37: {\r\n    inputLabel: {\r\n      config: {\r\n        user_id: 'Account ID'\r\n      }\r\n    },\r\n    prompt: {\r\n      config: {\r\n        user_id: '请输入 Account ID，例如：d8d7c61dbc334c32d3ced580e4bf42b4'\r\n      }\r\n    },\r\n    modelGroup: 'Cloudflare'\r\n  },\r\n  34: {\r\n    inputLabel: {\r\n      config: {\r\n        user_id: 'User ID'\r\n      }\r\n    },\r\n    prompt: {\r\n      models: '对于 Coze 而言，模型名称即 Bot ID，你可以添加一个前缀 `bot-`，例如：`bot-123456`',\r\n      config: {\r\n        user_id: '生成该密钥的用户 ID'\r\n      }\r\n    },\r\n    modelGroup: 'Coze'\r\n  },\r\n  42: {\r\n    inputLabel: {\r\n      key: '',\r\n      config: {\r\n        region: 'Vertex AI Region',\r\n        vertex_ai_project_id: 'Vertex AI Project ID',\r\n        vertex_ai_adc: 'Google Cloud Application Default Credentials JSON'\r\n      }\r\n    },\r\n    prompt: {\r\n      key: '',\r\n      config: {\r\n        region: 'Vertex AI Region.g. us-east5',\r\n        vertex_ai_project_id: 'Vertex AI Project ID',\r\n        vertex_ai_adc: 'Google Cloud Application Default Credentials JSON: https://cloud.google.com/docs/authentication/application-default-credentials'\r\n      }\r\n    },\r\n    modelGroup: 'anthropic'\r\n  },\r\n  45: {\r\n    modelGroup: 'xai'\r\n  },\r\n};\r\n\r\nexport { defaultConfig, typeConfig };\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { CHANNEL_OPTIONS } from 'constants/ChannelConstants';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { API } from 'utils/api';\r\nimport { showError, showSuccess, getChannelModels } from 'utils/common';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  Divider,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  ButtonGroup,\r\n  Container,\r\n  Autocomplete,\r\n  FormHelperText,\r\n  Switch,\r\n  Checkbox\r\n} from '@mui/material';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { defaultConfig, typeConfig } from '../type/Config'; //typeConfig\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport CheckBoxOutlineBlankIcon from '@mui/icons-material/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst filter = createFilterOptions();\r\nconst validationSchema = Yup.object().shape({\r\n  is_edit: Yup.boolean(),\r\n  name: Yup.string().required('名称 不能为空'),\r\n  type: Yup.number().required('渠道 不能为空'),\r\n  key: Yup.string().when(['is_edit', 'type'], {\r\n    is: (is_edit, type) => !is_edit && type !== 33,\r\n    then: Yup.string().required('密钥 不能为空')\r\n  }),\r\n  other: Yup.string(),\r\n  models: Yup.array().min(1, '模型 不能为空'),\r\n  groups: Yup.array().min(1, '用户组 不能为空'),\r\n  base_url: Yup.string().when('type', {\r\n    is: (value) => [3, 8].includes(value),\r\n    then: Yup.string().required('渠道API地址 不能为空'), // base_url 是必需的\r\n    otherwise: Yup.string() // 在其他情况下，base_url 可以是任意字符串\r\n  }),\r\n  model_mapping: Yup.string().test('is-json', '必须是有效的JSON字符串', function (value) {\r\n    try {\r\n      if (value === '' || value === null || value === undefined) {\r\n        return true;\r\n      }\r\n      const parsedValue = JSON.parse(value);\r\n      if (typeof parsedValue === 'object') {\r\n        return true;\r\n      }\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n    return false;\r\n  })\r\n});\r\n\r\nconst EditModal = ({ open, channelId, onCancel, onOk }) => {\r\n  const theme = useTheme();\r\n  // const [loading, setLoading] = useState(false);\r\n  const [initialInput, setInitialInput] = useState(defaultConfig.input);\r\n  const [inputLabel, setInputLabel] = useState(defaultConfig.inputLabel); //\r\n  const [inputPrompt, setInputPrompt] = useState(defaultConfig.prompt);\r\n  const [groupOptions, setGroupOptions] = useState([]);\r\n  const [modelOptions, setModelOptions] = useState([]);\r\n  const [batchAdd, setBatchAdd] = useState(false);\r\n  const [basicModels, setBasicModels] = useState([]);\r\n\r\n  const initChannel = (typeValue) => {\r\n    if (typeConfig[typeValue]?.inputLabel) {\r\n      setInputLabel({\r\n        ...defaultConfig.inputLabel,\r\n        ...typeConfig[typeValue].inputLabel\r\n      });\r\n    } else {\r\n      setInputLabel(defaultConfig.inputLabel);\r\n    }\r\n\r\n    if (typeConfig[typeValue]?.prompt) {\r\n      setInputPrompt({\r\n        ...defaultConfig.prompt,\r\n        ...typeConfig[typeValue].prompt\r\n      });\r\n    } else {\r\n      setInputPrompt(defaultConfig.prompt);\r\n    }\r\n\r\n    return typeConfig[typeValue]?.input;\r\n  };\r\n  const handleTypeChange = (setFieldValue, typeValue, values) => {\r\n    initChannel(typeValue);\r\n    let localModels = getChannelModels(typeValue);\r\n    setBasicModels(localModels);\r\n    if (localModels.length > 0 && Array.isArray(values['models']) && values['models'].length == 0) {\r\n      setFieldValue('models', initialModel(localModels));\r\n    }\r\n\r\n    setFieldValue('config', {});\r\n  };\r\n\r\n  const fetchGroups = async () => {\r\n    try {\r\n      let res = await API.get(`/api/group/`);\r\n      setGroupOptions(res.data.data);\r\n    } catch (error) {\r\n      showError(error.message);\r\n    }\r\n  };\r\n\r\n  const fetchModels = async () => {\r\n    try {\r\n      let res = await API.get(`/api/channel/models`);\r\n      const { data } = res.data;\r\n      data.forEach((item) => {\r\n        if (!item.owned_by) {\r\n          item.owned_by = '未知';\r\n        }\r\n      });\r\n      // 先对data排序\r\n      data.sort((a, b) => {\r\n        const ownedByComparison = a.owned_by.localeCompare(b.owned_by);\r\n        if (ownedByComparison === 0) {\r\n          return a.id.localeCompare(b.id);\r\n        }\r\n        return ownedByComparison;\r\n      });\r\n\r\n      setModelOptions(\r\n        data.map((model) => {\r\n          return {\r\n            id: model.id,\r\n            group: model.owned_by\r\n          };\r\n        })\r\n      );\r\n    } catch (error) {\r\n      showError(error.message);\r\n    }\r\n  };\r\n\r\n  const submit = async (values, { setErrors, setStatus, setSubmitting }) => {\r\n    setSubmitting(true);\r\n    if (values.base_url && values.base_url.endsWith('/')) {\r\n      values.base_url = values.base_url.slice(0, values.base_url.length - 1);\r\n    }\r\n    if (values.type === 3 && values.other === '') {\r\n      values.other = '2023-09-01-preview';\r\n    }\r\n    if (values.type === 18 && values.other === '') {\r\n      values.other = 'v2.1';\r\n    }\r\n    if (values.key === '') {\r\n      if (values.config.ak && values.config.sk && values.config.region) {\r\n        values.key = `${values.config.ak}|${values.config.sk}|${values.config.region}`;\r\n      } else if (values.config.region && values.config.vertex_ai_project_id && values.config.vertex_ai_adc) {\r\n        values.key = `${values.config.region}|${values.config.vertex_ai_project_id}|${values.config.vertex_ai_adc}`;\r\n      }\r\n    }\r\n\r\n    let res;\r\n    const modelsStr = values.models.map((model) => model.id).join(',');\r\n    const configStr = JSON.stringify(values.config);\r\n    values.group = values.groups.join(',');\r\n    if (channelId) {\r\n      res = await API.put(`/api/channel/`, {\r\n        ...values,\r\n        id: parseInt(channelId),\r\n        models: modelsStr,\r\n        config: configStr\r\n      });\r\n    } else {\r\n      res = await API.post(`/api/channel/`, { ...values, models: modelsStr, config: configStr });\r\n    }\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      if (channelId) {\r\n        showSuccess('渠道更新成功！');\r\n      } else {\r\n        showSuccess('渠道创建成功！');\r\n      }\r\n      setSubmitting(false);\r\n      setStatus({ success: true });\r\n      onOk(true);\r\n    } else {\r\n      setStatus({ success: false });\r\n      showError(message);\r\n      setErrors({ submit: message });\r\n    }\r\n  };\r\n\r\n  function initialModel(channelModel) {\r\n    if (!channelModel) {\r\n      return [];\r\n    }\r\n\r\n    // 如果 channelModel 是一个字符串\r\n    if (typeof channelModel === 'string') {\r\n      channelModel = channelModel.split(',');\r\n    }\r\n    let modelList = channelModel.map((model) => {\r\n      const modelOption = modelOptions.find((option) => option.id === model);\r\n      if (modelOption) {\r\n        return modelOption;\r\n      }\r\n      return { id: model, group: '自定义：点击或回车输入' };\r\n    });\r\n    return modelList;\r\n  }\r\n\r\n  const loadChannel = async () => {\r\n    let res = await API.get(`/api/channel/${channelId}`);\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      if (data.models === '') {\r\n        data.models = [];\r\n      } else {\r\n        data.models = initialModel(data.models);\r\n      }\r\n      if (data.group === '') {\r\n        data.groups = [];\r\n      } else {\r\n        data.groups = data.group.split(',');\r\n      }\r\n      if (data.model_mapping !== '') {\r\n        data.model_mapping = JSON.stringify(JSON.parse(data.model_mapping), null, 2);\r\n      }\r\n      if (data.config !== '') {\r\n        data.config = JSON.parse(data.config);\r\n      }\r\n\r\n      data.base_url = data.base_url ?? '';\r\n      data.is_edit = true;\r\n      initChannel(data.type);\r\n      setInitialInput(data);\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchGroups().then();\r\n    fetchModels().then();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBatchAdd(false);\r\n    if (channelId) {\r\n      loadChannel().then();\r\n    } else {\r\n      initChannel(1);\r\n      setInitialInput({ ...defaultConfig.input, is_edit: false });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [channelId]);\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onCancel} fullWidth maxWidth={'md'}>\r\n      <DialogTitle\r\n        sx={{\r\n          margin: '0px',\r\n          fontWeight: 700,\r\n          lineHeight: '1.55556',\r\n          padding: '24px',\r\n          fontSize: '1.125rem'\r\n        }}\r\n      >\r\n        {channelId ? '编辑渠道' : '新建渠道'}\r\n      </DialogTitle>\r\n      <Divider />\r\n      <DialogContent>\r\n        <Formik initialValues={initialInput} enableReinitialize validationSchema={validationSchema} onSubmit={submit}>\r\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values, setFieldValue }) => (\r\n            <form noValidate onSubmit={handleSubmit}>\r\n              <FormControl fullWidth error={Boolean(touched.type && errors.type)} sx={{ ...theme.typography.otherInput }}>\r\n                <InputLabel htmlFor=\"channel-type-label\">{inputLabel.type}</InputLabel>\r\n                <Select\r\n                  id=\"channel-type-label\"\r\n                  label={inputLabel.type}\r\n                  value={values.type}\r\n                  name=\"type\"\r\n                  onBlur={handleBlur}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                    handleTypeChange(setFieldValue, e.target.value, values);\r\n                  }}\r\n                  MenuProps={{\r\n                    PaperProps: {\r\n                      style: {\r\n                        maxHeight: 200\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {Object.values(CHANNEL_OPTIONS)\r\n                    .sort((a, b) => {\r\n                      return a.text.localeCompare(b.text);\r\n                    })\r\n                    .map((option) => {\r\n                      return (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.text}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                </Select>\r\n                {touched.type && errors.type ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-type-label\">\r\n                    {errors.type}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-type-label\"> {inputPrompt.type} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n\r\n              <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.otherInput }}>\r\n                <InputLabel htmlFor=\"channel-name-label\">{inputLabel.name}</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"channel-name-label\"\r\n                  label={inputLabel.name}\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  name=\"name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  inputProps={{ autoComplete: 'name' }}\r\n                  aria-describedby=\"helper-text-channel-name-label\"\r\n                />\r\n                {touched.name && errors.name ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-name-label\">\r\n                    {errors.name}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-name-label\"> {inputPrompt.name} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n\r\n              <FormControl fullWidth error={Boolean(touched.base_url && errors.base_url)} sx={{ ...theme.typography.otherInput }}>\r\n                <InputLabel htmlFor=\"channel-base_url-label\">{inputLabel.base_url}</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"channel-base_url-label\"\r\n                  label={inputLabel.base_url}\r\n                  type=\"text\"\r\n                  value={values.base_url}\r\n                  name=\"base_url\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  inputProps={{}}\r\n                  aria-describedby=\"helper-text-channel-base_url-label\"\r\n                />\r\n                {touched.base_url && errors.base_url ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-base_url-label\">\r\n                    {errors.base_url}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-base_url-label\"> {inputPrompt.base_url} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n\r\n              {inputPrompt.other && (\r\n                <FormControl fullWidth error={Boolean(touched.other && errors.other)} sx={{ ...theme.typography.otherInput }}>\r\n                  <InputLabel htmlFor=\"channel-other-label\">{inputLabel.other}</InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"channel-other-label\"\r\n                    label={inputLabel.other}\r\n                    type=\"text\"\r\n                    value={values.other}\r\n                    name=\"other\"\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    inputProps={{}}\r\n                    aria-describedby=\"helper-text-channel-other-label\"\r\n                  />\r\n                  {touched.other && errors.other ? (\r\n                    <FormHelperText error id=\"helper-tex-channel-other-label\">\r\n                      {errors.other}\r\n                    </FormHelperText>\r\n                  ) : (\r\n                    <FormHelperText id=\"helper-tex-channel-other-label\"> {inputPrompt.other} </FormHelperText>\r\n                  )}\r\n                </FormControl>\r\n              )}\r\n\r\n              <FormControl fullWidth sx={{ ...theme.typography.otherInput }}>\r\n                <Autocomplete\r\n                  multiple\r\n                  id=\"channel-groups-label\"\r\n                  options={groupOptions}\r\n                  value={values.groups}\r\n                  onChange={(e, value) => {\r\n                    const event = {\r\n                      target: {\r\n                        name: 'groups',\r\n                        value: value\r\n                      }\r\n                    };\r\n                    handleChange(event);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  filterSelectedOptions\r\n                  renderInput={(params) => <TextField {...params} name=\"groups\" error={Boolean(errors.groups)} label={inputLabel.groups} />}\r\n                  aria-describedby=\"helper-text-channel-groups-label\"\r\n                />\r\n                {errors.groups ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-groups-label\">\r\n                    {errors.groups}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-groups-label\"> {inputPrompt.groups} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n\r\n              <FormControl fullWidth sx={{ ...theme.typography.otherInput }}>\r\n                <Autocomplete\r\n                  multiple\r\n                  freeSolo\r\n                  id=\"channel-models-label\"\r\n                  options={modelOptions}\r\n                  value={values.models}\r\n                  onChange={(e, value) => {\r\n                    const event = {\r\n                      target: {\r\n                        name: 'models',\r\n                        value: value.map((item) => (typeof item === 'string' ? { id: item, group: '自定义：点击或回车输入' } : item))\r\n                      }\r\n                    };\r\n                    handleChange(event);\r\n                  }}\r\n                  onBlur={handleBlur}\r\n                  // filterSelectedOptions\r\n                  disableCloseOnSelect\r\n                  renderInput={(params) => <TextField {...params} name=\"models\" error={Boolean(errors.models)} label={inputLabel.models} />}\r\n                  groupBy={(option) => option.group}\r\n                  getOptionLabel={(option) => {\r\n                    if (typeof option === 'string') {\r\n                      return option;\r\n                    }\r\n                    if (option.inputValue) {\r\n                      return option.inputValue;\r\n                    }\r\n                    return option.id;\r\n                  }}\r\n                  filterOptions={(options, params) => {\r\n                    const filtered = filter(options, params);\r\n                    const { inputValue } = params;\r\n                    const isExisting = options.some((option) => inputValue === option.id);\r\n                    if (inputValue !== '' && !isExisting) {\r\n                      filtered.push({\r\n                        id: inputValue,\r\n                        group: '自定义：点击或回车输入'\r\n                      });\r\n                    }\r\n                    return filtered;\r\n                  }}\r\n                  renderOption={(props, option, { selected }) => (\r\n                    <li {...props}>\r\n                      <Checkbox icon={icon} checkedIcon={checkedIcon} style={{ marginRight: 8 }} checked={selected} />\r\n                      {option.id}\r\n                    </li>\r\n                  )}\r\n                />\r\n                {errors.models ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-models-label\">\r\n                    {errors.models}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-models-label\"> {inputPrompt.models} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n              <Container\r\n                sx={{\r\n                  textAlign: 'right'\r\n                }}\r\n              >\r\n                <ButtonGroup variant=\"outlined\" aria-label=\"small outlined primary button group\">\r\n                  <Button\r\n                    onClick={() => {\r\n                      setFieldValue('models', initialModel(basicModels));\r\n                    }}\r\n                  >\r\n                    填入相关模型\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setFieldValue('models', modelOptions);\r\n                    }}\r\n                  >\r\n                    填入所有模型\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Container>\r\n              {inputLabel.key && (\r\n                <>\r\n                  <FormControl fullWidth error={Boolean(touched.key && errors.key)} sx={{ ...theme.typography.otherInput }}>\r\n                    {!batchAdd ? (\r\n                      <>\r\n                        <InputLabel htmlFor=\"channel-key-label\">{inputLabel.key}</InputLabel>\r\n                        <OutlinedInput\r\n                          id=\"channel-key-label\"\r\n                          label={inputLabel.key}\r\n                          type=\"text\"\r\n                          value={values.key}\r\n                          name=\"key\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          inputProps={{}}\r\n                          aria-describedby=\"helper-text-channel-key-label\"\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <TextField\r\n                        multiline\r\n                        id=\"channel-key-label\"\r\n                        label={inputLabel.key}\r\n                        value={values.key}\r\n                        name=\"key\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        aria-describedby=\"helper-text-channel-key-label\"\r\n                        minRows={5}\r\n                        placeholder={inputPrompt.key + '，一行一个密钥'}\r\n                      />\r\n                    )}\r\n\r\n                    {touched.key && errors.key ? (\r\n                      <FormHelperText error id=\"helper-tex-channel-key-label\">\r\n                        {errors.key}\r\n                      </FormHelperText>\r\n                    ) : (\r\n                      <FormHelperText id=\"helper-tex-channel-key-label\"> {inputPrompt.key} </FormHelperText>\r\n                    )}\r\n                  </FormControl>\r\n                  {channelId === 0 && (\r\n                    <Container\r\n                      sx={{\r\n                        textAlign: 'right'\r\n                      }}\r\n                    >\r\n                      <Switch checked={batchAdd} onChange={(e) => setBatchAdd(e.target.checked)} />\r\n                      批量添加\r\n                    </Container>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {inputLabel.config &&\r\n                Object.keys(inputLabel.config).map((configName) => {\r\n                  return (\r\n                    <FormControl key={'config.' + configName} fullWidth sx={{ ...theme.typography.otherInput }}>\r\n                      <TextField\r\n                        multiline\r\n                        key={'config.' + configName}\r\n                        name={'config.' + configName}\r\n                        value={values.config?.[configName] || ''}\r\n                        label={configName}\r\n                        placeholder={inputPrompt.config[configName]}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <FormHelperText id={`helper-tex-config.${configName}-label`}> {inputPrompt.config[configName]} </FormHelperText>\r\n                    </FormControl>\r\n                  );\r\n                })}\r\n\r\n              <FormControl fullWidth error={Boolean(touched.model_mapping && errors.model_mapping)} sx={{ ...theme.typography.otherInput }}>\r\n                {/* <InputLabel htmlFor=\"channel-model_mapping-label\">{inputLabel.model_mapping}</InputLabel> */}\r\n                <TextField\r\n                  multiline\r\n                  id=\"channel-model_mapping-label\"\r\n                  label={inputLabel.model_mapping}\r\n                  value={values.model_mapping}\r\n                  name=\"model_mapping\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  aria-describedby=\"helper-text-channel-model_mapping-label\"\r\n                  minRows={5}\r\n                  placeholder={inputPrompt.model_mapping}\r\n                />\r\n                {touched.model_mapping && errors.model_mapping ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-model_mapping-label\">\r\n                    {errors.model_mapping}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-model_mapping-label\"> {inputPrompt.model_mapping} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n              <FormControl fullWidth error={Boolean(touched.system_prompt && errors.system_prompt)} sx={{ ...theme.typography.otherInput }}>\r\n                {/* <InputLabel htmlFor=\"channel-model_mapping-label\">{inputLabel.model_mapping}</InputLabel> */}\r\n                <TextField\r\n                  multiline\r\n                  id=\"channel-system_prompt-label\"\r\n                  label={inputLabel.system_prompt}\r\n                  value={values.system_prompt}\r\n                  name=\"system_prompt\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  aria-describedby=\"helper-text-channel-system_prompt-label\"\r\n                  minRows={5}\r\n                  placeholder={inputPrompt.system_prompt}\r\n                />\r\n                {touched.system_prompt && errors.system_prompt ? (\r\n                  <FormHelperText error id=\"helper-tex-channel-system_prompt-label\">\r\n                    {errors.system_prompt}\r\n                  </FormHelperText>\r\n                ) : (\r\n                  <FormHelperText id=\"helper-tex-channel-system_prompt-label\"> {inputPrompt.system_prompt} </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n              <DialogActions>\r\n                <Button onClick={onCancel}>取消</Button>\r\n                <Button disableElevation disabled={isSubmitting} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                  提交\r\n                </Button>\r\n              </DialogActions>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditModal;\r\n\r\nEditModal.propTypes = {\r\n  open: PropTypes.bool,\r\n  channelId: PropTypes.number,\r\n  onCancel: PropTypes.func,\r\n  onOk: PropTypes.func\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { showError, showSuccess, showInfo, loadChannelModels } from 'utils/common';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nimport { Button, IconButton, Card, Box, Stack, Container, Typography, Divider } from '@mui/material';\r\nimport ChannelTableRow from './component/TableRow';\r\nimport ChannelTableHead from './component/TableHead';\r\nimport TableToolBar from 'ui-component/TableToolBar';\r\nimport { API } from 'utils/api';\r\nimport { ITEMS_PER_PAGE } from 'constants';\r\nimport { IconRefresh, IconHttpDelete, IconPlus, IconBrandSpeedtest, IconCoinYuan } from '@tabler/icons-react';\r\nimport EditeModal from './component/EditModal';\r\n\r\n// ----------------------------------------------------------------------\r\n// CHANNEL_OPTIONS,\r\nexport default function ChannelPage() {\r\n  const [channels, setChannels] = useState([]);\r\n  const [activePage, setActivePage] = useState(0);\r\n  const [searching, setSearching] = useState(false);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const theme = useTheme();\r\n  const matchUpMd = useMediaQuery(theme.breakpoints.up('sm'));\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [editChannelId, setEditChannelId] = useState(0);\r\n\r\n  const loadChannels = async (startIdx) => {\r\n    setSearching(true);\r\n    const res = await API.get(`/api/channel/?p=${startIdx}`);\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      if (startIdx === 0) {\r\n        setChannels(data);\r\n      } else {\r\n        let newChannels = [...channels];\r\n        newChannels.splice(startIdx * ITEMS_PER_PAGE, data.length, ...data);\r\n        setChannels(newChannels);\r\n      }\r\n    } else {\r\n      showError(message);\r\n    }\r\n    setSearching(false);\r\n  };\r\n\r\n  const onPaginationChange = (event, activePage) => {\r\n    (async () => {\r\n      if (activePage === Math.ceil(channels.length / ITEMS_PER_PAGE)) {\r\n        // In this case we have to load more data and then append them.\r\n        await loadChannels(activePage);\r\n      }\r\n      setActivePage(activePage);\r\n    })();\r\n  };\r\n\r\n  const searchChannels = async (event) => {\r\n    event.preventDefault();\r\n    if (searchKeyword === '') {\r\n      await loadChannels(0);\r\n      setActivePage(0);\r\n      return;\r\n    }\r\n    setSearching(true);\r\n    const res = await API.get(`/api/channel/search?keyword=${searchKeyword}`);\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      setChannels(data);\r\n      setActivePage(0);\r\n    } else {\r\n      showError(message);\r\n    }\r\n    setSearching(false);\r\n  };\r\n\r\n  const handleSearchKeyword = (event) => {\r\n    setSearchKeyword(event.target.value);\r\n  };\r\n\r\n  const manageChannel = async (id, action, value) => {\r\n    const url = '/api/channel/';\r\n    let data = { id };\r\n    let res;\r\n    switch (action) {\r\n      case 'delete':\r\n        res = await API.delete(url + id);\r\n        break;\r\n      case 'status':\r\n        res = await API.put(url, {\r\n          ...data,\r\n          status: value\r\n        });\r\n        break;\r\n      case 'priority':\r\n        if (value === '') {\r\n          return;\r\n        }\r\n        res = await API.put(url, {\r\n          ...data,\r\n          priority: parseInt(value)\r\n        });\r\n        break;\r\n      case 'test':\r\n        res = await API.get(url + `test/${id}`);\r\n        break;\r\n    }\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      showSuccess('操作成功完成！');\r\n      if (action === 'delete') {\r\n        await handleRefresh();\r\n      }\r\n    } else {\r\n      showError(message);\r\n    }\r\n\r\n    return res.data;\r\n  };\r\n\r\n  // 处理刷新\r\n  const handleRefresh = async () => {\r\n    await loadChannels(activePage);\r\n  };\r\n\r\n  // 处理测试所有启用渠道\r\n  const testAllChannels = async () => {\r\n    const res = await API.get(`/api/channel/test`);\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      showInfo('已成功开始测试所有渠道，请刷新页面查看结果。');\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  // 处理删除所有禁用渠道\r\n  const deleteAllDisabledChannels = async () => {\r\n    const res = await API.delete(`/api/channel/disabled`);\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      showSuccess(`已删除所有禁用渠道，共计 ${data} 个`);\r\n      await handleRefresh();\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  // 处理更新所有启用渠道余额\r\n  const updateAllChannelsBalance = async () => {\r\n    setSearching(true);\r\n    const res = await API.get(`/api/channel/update_balance`);\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      showInfo('已更新完毕所有已启用渠道余额！');\r\n    } else {\r\n      showError(message);\r\n    }\r\n    setSearching(false);\r\n  };\r\n\r\n  const handleOpenModal = (channelId) => {\r\n    setEditChannelId(channelId);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setEditChannelId(0);\r\n  };\r\n\r\n  const handleOkModal = (status) => {\r\n    if (status === true) {\r\n      handleCloseModal();\r\n      handleRefresh();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadChannels(0)\r\n      .then()\r\n      .catch((reason) => {\r\n        showError(reason);\r\n      });\r\n    loadChannelModels().then();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={2.5}>\r\n        <Typography variant=\"h4\">渠道</Typography>\r\n        <Button variant=\"contained\" color=\"primary\" startIcon={<IconPlus />} onClick={() => handleOpenModal(0)}>\r\n          新建渠道\r\n        </Button>\r\n      </Stack>\r\n      <Card>\r\n        <Box component=\"form\" onSubmit={searchChannels} noValidate sx={{ marginTop: 2 }}>\r\n          <TableToolBar filterName={searchKeyword} handleFilterName={handleSearchKeyword} placeholder={'搜索渠道的 ID，名称和密钥 ...'} />\r\n        </Box>\r\n        <Toolbar\r\n          sx={{\r\n            textAlign: 'right',\r\n            height: 50,\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            p: (theme) => theme.spacing(0, 1, 0, 3)\r\n          }}\r\n        >\r\n          <Container>\r\n            {matchUpMd ? (\r\n              <ButtonGroup variant=\"outlined\" aria-label=\"outlined small primary button group\" sx={{ marginBottom: 2 }}>\r\n                <Button onClick={handleRefresh} startIcon={<IconRefresh width={'18px'} />}>\r\n                  刷新\r\n                </Button>\r\n                <Button onClick={testAllChannels} startIcon={<IconBrandSpeedtest width={'18px'} />}>\r\n                  测试启用渠道\r\n                </Button>\r\n                {/*<Button onClick={updateAllChannelsBalance} startIcon={<IconCoinYuan width={'18px'} />}>*/}\r\n                {/*  更新启用余额*/}\r\n                {/*</Button>*/}\r\n                <Button onClick={deleteAllDisabledChannels} startIcon={<IconHttpDelete width={'18px'} />}>\r\n                  删除禁用渠道\r\n                </Button>\r\n              </ButtonGroup>\r\n            ) : (\r\n              <Stack\r\n                direction=\"row\"\r\n                spacing={1}\r\n                divider={<Divider orientation=\"vertical\" flexItem />}\r\n                justifyContent=\"space-around\"\r\n                alignItems=\"center\"\r\n              >\r\n                <IconButton onClick={handleRefresh} size=\"large\">\r\n                  <IconRefresh />\r\n                </IconButton>\r\n                <IconButton onClick={testAllChannels} size=\"large\">\r\n                  <IconBrandSpeedtest />\r\n                </IconButton>\r\n                <IconButton onClick={updateAllChannelsBalance} size=\"large\">\r\n                  <IconCoinYuan />\r\n                </IconButton>\r\n                <IconButton onClick={deleteAllDisabledChannels} size=\"large\">\r\n                  <IconHttpDelete />\r\n                </IconButton>\r\n              </Stack>\r\n            )}\r\n          </Container>\r\n        </Toolbar>\r\n        {searching && <LinearProgress />}\r\n        <PerfectScrollbar component=\"div\">\r\n          <TableContainer sx={{ overflow: 'unset' }}>\r\n            <Table sx={{ minWidth: 800 }}>\r\n              <ChannelTableHead />\r\n              <TableBody>\r\n                {channels.slice(activePage * ITEMS_PER_PAGE, (activePage + 1) * ITEMS_PER_PAGE).map((row) => (\r\n                  <ChannelTableRow\r\n                    item={row}\r\n                    manageChannel={manageChannel}\r\n                    key={row.id}\r\n                    handleOpenModal={handleOpenModal}\r\n                    setModalChannelId={setEditChannelId}\r\n                  />\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </PerfectScrollbar>\r\n        <TablePagination\r\n          page={activePage}\r\n          component=\"div\"\r\n          count={channels.length + (channels.length % ITEMS_PER_PAGE === 0 ? 1 : 0)}\r\n          rowsPerPage={ITEMS_PER_PAGE}\r\n          onPageChange={onPaginationChange}\r\n          rowsPerPageOptions={[ITEMS_PER_PAGE]}\r\n        />\r\n      </Card>\r\n      <EditeModal open={openModal} onCancel={handleCloseModal} onOk={handleOkModal} channelId={editChannelId} />\r\n    </>\r\n  );\r\n}\r\n","/*\r\n * Label.js\r\n *\r\n * This file uses code from the Minimal UI project, available at\r\n * https://github.com/minimal-ui-kit/material-kit-react/blob/main/src/components/label/label.jsx\r\n *\r\n * Minimal UI is licensed under the MIT License. A copy of the license is included below:\r\n *\r\n * MIT License\r\n *\r\n * Copyright (c) 2021 Minimal UI (https://minimals.cc/)\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\nimport PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { alpha, styled } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Label = forwardRef(({ children, color = 'default', variant = 'soft', startIcon, endIcon, sx, ...other }, ref) => {\r\n  const theme = useTheme();\r\n\r\n  const iconStyles = {\r\n    width: 16,\r\n    height: 16,\r\n    '& svg, img': { width: 1, height: 1, objectFit: 'cover' }\r\n  };\r\n\r\n  return (\r\n    <StyledLabel\r\n      ref={ref}\r\n      component=\"span\"\r\n      ownerState={{ color, variant }}\r\n      sx={{\r\n        ...(startIcon && { pl: 0.75 }),\r\n        ...(endIcon && { pr: 0.75 }),\r\n        ...sx\r\n      }}\r\n      theme={theme}\r\n      {...other}\r\n    >\r\n      {startIcon && <Box sx={{ mr: 0.75, ...iconStyles }}> {startIcon} </Box>}\r\n\r\n      {children}\r\n\r\n      {endIcon && <Box sx={{ ml: 0.75, ...iconStyles }}> {endIcon} </Box>}\r\n    </StyledLabel>\r\n  );\r\n});\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  endIcon: PropTypes.object,\r\n  startIcon: PropTypes.object,\r\n  sx: PropTypes.object,\r\n  variant: PropTypes.oneOf(['filled', 'outlined', 'ghost', 'soft']),\r\n  color: PropTypes.oneOf(['default', 'primary', 'secondary', 'info', 'success', 'warning', 'orange', 'error'])\r\n};\r\n\r\nexport default Label;\r\n\r\nconst StyledLabel = styled(Box)(({ theme, ownerState }) => {\r\n  // const lightMode = theme.palette.mode === 'light';\r\n\r\n  const filledVariant = ownerState.variant === 'filled';\r\n\r\n  const outlinedVariant = ownerState.variant === 'outlined';\r\n\r\n  const softVariant = ownerState.variant === 'soft';\r\n\r\n  const ghostVariant = ownerState.variant === 'ghost';\r\n\r\n  const defaultStyle = {\r\n    ...(ownerState.color === 'default' && {\r\n      // FILLED\r\n      ...(filledVariant && {\r\n        color: theme.palette.grey[300],\r\n        backgroundColor: theme.palette.text.primary\r\n      }),\r\n      // OUTLINED\r\n      ...(outlinedVariant && {\r\n        color: theme.palette.grey[500],\r\n        border: `2px solid ${theme.palette.grey[500]}`\r\n      }),\r\n      // SOFT\r\n      ...(softVariant && {\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: alpha(theme.palette.grey[500], 0.16)\r\n      })\r\n    })\r\n  };\r\n\r\n  const colorStyle = {\r\n    ...(ownerState.color !== 'default' && {\r\n      // FILLED\r\n      ...(filledVariant && {\r\n        color: theme.palette.background.paper,\r\n        backgroundColor: theme.palette[ownerState.color]?.main\r\n      }),\r\n      // OUTLINED\r\n      ...(outlinedVariant && {\r\n        backgroundColor: 'transparent',\r\n        color: theme.palette[ownerState.color]?.main,\r\n        border: `2px solid ${theme.palette[ownerState.color]?.main}`\r\n      }),\r\n      // SOFT\r\n      ...(softVariant && {\r\n        color: theme.palette[ownerState.color]['dark'],\r\n        backgroundColor: alpha(theme.palette[ownerState.color]?.main, 0.16)\r\n      }),\r\n      // GHOST\r\n      ...(ghostVariant && {\r\n        color: theme.palette[ownerState.color]?.main\r\n      })\r\n    })\r\n  };\r\n\r\n  return {\r\n    height: 24,\r\n    minWidth: 24,\r\n    lineHeight: 0,\r\n    borderRadius: 6,\r\n    cursor: 'default',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    // textTransform: 'capitalize',\r\n    padding: theme.spacing(0, 0.75),\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    transition: theme.transitions.create('all', {\r\n      duration: theme.transitions.duration.shorter\r\n    }),\r\n    ...defaultStyle,\r\n    ...colorStyle\r\n  };\r\n});\r\n","export const ITEMS_PER_PAGE = 10; // this value must keep same as the one defined in backend!\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5zm0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2\"\n}), 'CheckBoxOutlineBlank');","import PropTypes from 'prop-types';\r\n\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { IconSearch } from '@tabler/icons-react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableToolBar({ filterName, handleFilterName, placeholder }) {\r\n  const theme = useTheme();\r\n  const grey500 = theme.palette.grey[500];\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        height: 80,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        p: (theme) => theme.spacing(0, 1, 0, 3)\r\n      }}\r\n    >\r\n      <OutlinedInput\r\n        id=\"keyword\"\r\n        sx={{\r\n          minWidth: '100%'\r\n        }}\r\n        value={filterName}\r\n        onChange={handleFilterName}\r\n        placeholder={placeholder}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <IconSearch stroke={1.5} size=\"20px\" color={grey500} />\r\n          </InputAdornment>\r\n        }\r\n      />\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nTableToolBar.propTypes = {\r\n  filterName: PropTypes.string,\r\n  handleFilterName: PropTypes.func,\r\n  placeholder: PropTypes.string\r\n};\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2m-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTextFieldUtilityClass(slot) {\n  return generateUtilityClass('MuiTextField', slot);\n}\nconst textFieldClasses = generateUtilityClasses('MuiTextField', ['root']);\nexport default textFieldClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"autoComplete\", \"autoFocus\", \"children\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"maxRows\", \"minRows\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useId from '@mui/utils/useId';\nimport refType from '@mui/utils/refType';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport { getTextFieldUtilityClass } from './textFieldClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTextFieldUtilityClass, classes);\n};\nconst TextFieldRoot = styled(FormControl, {\n  name: 'MuiTextField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\n\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/material-ui/api/form-control/)\n * - [InputLabel](/material-ui/api/input-label/)\n * - [FilledInput](/material-ui/api/filled-input/)\n * - [OutlinedInput](/material-ui/api/outlined-input/)\n * - [Input](/material-ui/api/input/)\n * - [FormHelperText](/material-ui/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\nconst TextField = /*#__PURE__*/React.forwardRef(function TextField(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTextField'\n  });\n  const {\n      autoComplete,\n      autoFocus = false,\n      children,\n      className,\n      color = 'primary',\n      defaultValue,\n      disabled = false,\n      error = false,\n      FormHelperTextProps,\n      fullWidth = false,\n      helperText,\n      id: idOverride,\n      InputLabelProps,\n      inputProps,\n      InputProps,\n      inputRef,\n      label,\n      maxRows,\n      minRows,\n      multiline = false,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      placeholder,\n      required = false,\n      rows,\n      select = false,\n      SelectProps,\n      type,\n      value,\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    autoFocus,\n    color,\n    disabled,\n    error,\n    fullWidth,\n    multiline,\n    required,\n    select,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('MUI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n  const InputMore = {};\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n    InputMore.label = label;\n  }\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n    InputMore['aria-describedby'] = undefined;\n  }\n  const id = useId(idOverride);\n  const helperTextId = helperText && id ? `${id}-helper-text` : undefined;\n  const inputLabelId = label && id ? `${id}-label` : undefined;\n  const InputComponent = variantComponent[variant];\n  const InputElement = /*#__PURE__*/_jsx(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/_jsxs(TextFieldRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant,\n    ownerState: ownerState\n  }, other, {\n    children: [label != null && label !== '' && /*#__PURE__*/_jsx(InputLabel, _extends({\n      htmlFor: id,\n      id: inputLabelId\n    }, InputLabelProps, {\n      children: label\n    })), select ? /*#__PURE__*/_jsx(Select, _extends({\n      \"aria-describedby\": helperTextId,\n      id: id,\n      labelId: inputLabelId,\n      value: value,\n      input: InputElement\n    }, SelectProps, {\n      children: children\n    })) : InputElement, helperText && /*#__PURE__*/_jsx(FormHelperText, _extends({\n      id: helperTextId\n    }, FormHelperTextProps, {\n      children: helperText\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * Props applied to the [`FormHelperText`](/material-ui/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n  /**\n   * Props applied to the [`InputLabel`](/material-ui/api/input-label/) element.\n   * Pointer events like `onClick` are enabled if and only if `shrink` is `true`.\n   */\n  InputLabelProps: PropTypes.object,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/material-ui/api/filled-input/),\n   * [`OutlinedInput`](/material-ui/api/outlined-input/) or [`Input`](/material-ui/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display when multiline option is set to true.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * If `true`, a `textarea` element is rendered instead of an input.\n   * @default false\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * The short hint displayed in the `input` before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * If `true`, the label is displayed as required and the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * Number of rows to display when multiline option is set to true.\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Render a [`Select`](/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   * @default false\n   */\n  select: PropTypes.bool,\n  /**\n   * Props applied to the [`Select`](/material-ui/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * The size of the component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default TextField;","export const CHANNEL_OPTIONS = {\r\n  1: {\r\n    key: 1,\r\n    text: 'OpenAI',\r\n    value: 1,\r\n    color: 'success'\r\n  },\r\n  14: {\r\n    key: 14,\r\n    text: 'Anthropic Claude',\r\n    value: 14,\r\n    color: 'primary'\r\n  },\r\n  33: {\r\n    key: 33,\r\n    text: 'AWS',\r\n    value: 33,\r\n    color: 'primary'\r\n  },\r\n  37: {\r\n    key: 37,\r\n    text: 'Cloudflare',\r\n    value: 37,\r\n    color: 'success'\r\n  },\r\n  3: {\r\n    key: 3,\r\n    text: 'Azure OpenAI',\r\n    value: 3,\r\n    color: 'success'\r\n  },\r\n  11: {\r\n    key: 11,\r\n    text: 'Google PaLM2',\r\n    value: 11,\r\n    color: 'warning'\r\n  },\r\n  24: {\r\n    key: 24,\r\n    text: 'Google Gemini',\r\n    value: 24,\r\n    color: 'warning'\r\n  },\r\n  28: {\r\n    key: 28,\r\n    text: 'Mistral AI',\r\n    value: 28,\r\n    color: 'warning'\r\n  },\r\n  40: {\r\n    key: 40,\r\n    text: '字节火山引擎',\r\n    value: 40,\r\n    color: 'primary'\r\n  },\r\n  15: {\r\n    key: 15,\r\n    text: '百度文心千帆',\r\n    value: 15,\r\n    color: 'primary'\r\n  },\r\n  17: {\r\n    key: 17,\r\n    text: '阿里通义千问',\r\n    value: 17,\r\n    color: 'primary'\r\n  },\r\n  18: {\r\n    key: 18,\r\n    text: '讯飞星火认知',\r\n    value: 18,\r\n    color: 'primary'\r\n  },\r\n  16: {\r\n    key: 16,\r\n    text: '智谱 ChatGLM',\r\n    value: 16,\r\n    color: 'primary'\r\n  },\r\n  19: {\r\n    key: 19,\r\n    text: '360 智脑',\r\n    value: 19,\r\n    color: 'primary'\r\n  },\r\n  25: {\r\n    key: 25,\r\n    text: 'Moonshot AI',\r\n    value: 25,\r\n    color: 'primary'\r\n  },\r\n  23: {\r\n    key: 23,\r\n    text: '腾讯混元',\r\n    value: 23,\r\n    color: 'primary'\r\n  },\r\n  26: {\r\n    key: 26,\r\n    text: '百川大模型',\r\n    value: 26,\r\n    color: 'primary'\r\n  },\r\n  27: {\r\n    key: 27,\r\n    text: 'MiniMax',\r\n    value: 27,\r\n    color: 'primary'\r\n  },\r\n  29: {\r\n    key: 29,\r\n    text: 'Groq',\r\n    value: 29,\r\n    color: 'primary'\r\n  },\r\n  30: {\r\n    key: 30,\r\n    text: 'Ollama',\r\n    value: 30,\r\n    color: 'primary'\r\n  },\r\n  31: {\r\n    key: 31,\r\n    text: '零一万物',\r\n    value: 31,\r\n    color: 'primary'\r\n  },\r\n  32: {\r\n    key: 32,\r\n    text: '阶跃星辰',\r\n    value: 32,\r\n    color: 'primary'\r\n  },\r\n  34: {\r\n    key: 34,\r\n    text: 'Coze',\r\n    value: 34,\r\n    color: 'primary'\r\n  },\r\n  35: {\r\n    key: 35,\r\n    text: 'Cohere',\r\n    value: 35,\r\n    color: 'primary'\r\n  },\r\n  36: {\r\n    key: 36,\r\n    text: 'DeepSeek',\r\n    value: 36,\r\n    color: 'primary'\r\n  },\r\n  38: {\r\n    key: 38,\r\n    text: 'DeepL',\r\n    value: 38,\r\n    color: 'primary'\r\n  },\r\n  39: {\r\n    key: 39,\r\n    text: 'together.ai',\r\n    value: 39,\r\n    color: 'primary'\r\n  },\r\n  42: {\r\n    key: 42,\r\n    text: 'VertexAI',\r\n    value: 42,\r\n    color: 'primary'\r\n  },\r\n  43: {\r\n    key: 43,\r\n    text: 'Proxy',\r\n    value: 43,\r\n    color: 'primary'\r\n  },\r\n  44: {\r\n    key: 44,\r\n    text: 'SiliconFlow',\r\n    value: 44,\r\n    color: 'primary'\r\n  },\r\n  45: {\r\n    key: 45,\r\n    text: 'xAI',\r\n    value: 45,\r\n    color: 'primary'\r\n  },\r\n  45: {\r\n    key: 46,\r\n    text: 'Replicate',\r\n    value: 46,\r\n    color: 'primary'\r\n  },\r\n  41: {\r\n    key: 41,\r\n    text: 'Novita',\r\n    value: 41,\r\n    color: 'purple'\r\n  },\r\n  8: {\r\n    key: 8,\r\n    text: '自定义渠道',\r\n    value: 8,\r\n    color: 'error'\r\n  },\r\n  22: {\r\n    key: 22,\r\n    text: '知识库：FastGPT',\r\n    value: 22,\r\n    color: 'success'\r\n  },\r\n  21: {\r\n    key: 21,\r\n    text: '知识库：AI Proxy',\r\n    value: 21,\r\n    color: 'success'\r\n  },\r\n  20: {\r\n    key: 20,\r\n      text: 'OpenRouter',\r\n    value: 20,\r\n    color: 'success'\r\n  },\r\n  2: {\r\n    key: 2,\r\n    text: '代理：API2D',\r\n    value: 2,\r\n    color: 'success'\r\n  },\r\n  5: {\r\n    key: 5,\r\n    text: '代理：OpenAI-SB',\r\n    value: 5,\r\n    color: 'success'\r\n  },\r\n  7: {\r\n    key: 7,\r\n    text: '代理：OhMyGPT',\r\n    value: 7,\r\n    color: 'success'\r\n  },\r\n  10: {\r\n    key: 10,\r\n    text: '代理：AI Proxy',\r\n    value: 10,\r\n    color: 'success'\r\n  },\r\n  4: {\r\n    key: 4,\r\n    text: '代理：CloseAI',\r\n    value: 4,\r\n    color: 'success'\r\n  },\r\n  6: {\r\n    key: 6,\r\n    text: '代理：OpenAI Max',\r\n    value: 6,\r\n    color: 'success'\r\n  },\r\n  9: {\r\n    key: 9,\r\n    text: '代理：AI.LS',\r\n    value: 9,\r\n    color: 'success'\r\n  },\r\n  12: {\r\n    key: 12,\r\n    text: '代理：API2GPT',\r\n    value: 12,\r\n    color: 'success'\r\n  },\r\n  13: {\r\n    key: 13,\r\n    text: '代理：AIGC2D',\r\n    value: 13,\r\n    color: 'success'\r\n  }\r\n};\r\n","import { styled } from '@mui/material/styles';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nconst TableSwitch = styled(Switch)(({ theme }) => ({\r\n  padding: 8,\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 22 / 2,\r\n    '&:before, &:after': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      width: 16,\r\n      height: 16\r\n    },\r\n    '&:before': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main)\r\n      )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n      left: 12\r\n    },\r\n    '&:after': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main)\r\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n      right: 12\r\n    }\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    boxShadow: 'none',\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2\r\n  }\r\n}));\r\n\r\nexport default TableSwitch;\r\n"],"names":["_ref","test_time","response_time","handle_action","color","time","toFixed","title","_jsxs","_Fragment","children","_jsx","timestamp2string","Tooltip","placement","onClick","Label","name2color","name","group","groups","split","sort","Stack","divider","Divider","orientation","flexItem","spacing","map","index","TooltipContainer","styled","Container","maxHeight","overflow","width","models","modelMap","item","variant","copy","ChannelTableRow","manageChannel","handleOpenModal","setModalChannelId","open","setOpen","useState","openDelete","setOpenDelete","statusSwitch","setStatusSwitch","status","priorityValve","setPriority","priority","responseTimeData","setResponseTimeData","itemBalance","setItemBalance","balance","handleDeleteClose","handleCloseMenu","TableRow","tabIndex","id","TableCell","NameLabel","GroupLabel","CHANNEL_OPTIONS","type","text","TableSwitch","checked","onChange","async","switchVlue","success","ResponseTimeLabel","Date","now","showInfo","renderNumber","used_quota","res","API","get","message","data","showError","renderBalance","TextField","onBlur","currentValue","parseInt","event","target","value","isNaN","label","defaultValue","inputProps","min","sx","IconButton","currentTarget","IconDotsVertical","Popover","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","MenuItem","IconEdit","style","marginRight","handleDeleteOpen","IconTrash","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ChannelTableHead","TableHead","IconBrandSpeedtest","createReactComponent","d","key","IconHttpDelete","IconCoinYuan","defaultConfig","base_url","other","model_mapping","config","system_prompt","typeConfig","inputLabel","prompt","input","modelGroup","region","ak","sk","user_id","vertex_ai_project_id","vertex_ai_adc","icon","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","filter","createFilterOptions","validationSchema","Yup","shape","is_edit","required","when","is","then","includes","otherwise","test","undefined","JSON","parse","e","channelId","onCancel","onOk","theme","useTheme","initialInput","setInitialInput","setInputLabel","inputPrompt","setInputPrompt","groupOptions","setGroupOptions","modelOptions","setModelOptions","batchAdd","setBatchAdd","basicModels","setBasicModels","initChannel","typeValue","_typeConfig$typeValue","_typeConfig$typeValue2","_typeConfig$typeValue3","initialModel","channelModel","model","modelOption","find","option","useEffect","error","fetchGroups","forEach","owned_by","a","b","ownedByComparison","localeCompare","fetchModels","_data$base_url","stringify","loadChannel","fullWidth","maxWidth","margin","fontWeight","lineHeight","padding","Formik","initialValues","enableReinitialize","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","endsWith","slice","length","modelsStr","join","configStr","put","post","showSuccess","submit","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","noValidate","FormControl","Boolean","typography","otherInput","InputLabel","htmlFor","Select","handleTypeChange","localModels","getChannelModels","Array","isArray","MenuProps","Object","FormHelperText","OutlinedInput","autoComplete","Autocomplete","multiple","options","filterSelectedOptions","renderInput","params","freeSolo","disableCloseOnSelect","groupBy","getOptionLabel","inputValue","filterOptions","filtered","isExisting","some","push","renderOption","props","_ref4","selected","Checkbox","textAlign","ButtonGroup","multiline","minRows","placeholder","Switch","keys","configName","_values$config","disableElevation","disabled","ChannelPage","channels","setChannels","activePage","setActivePage","searching","setSearching","searchKeyword","setSearchKeyword","matchUpMd","useMediaQuery","breakpoints","up","openModal","setOpenModal","editChannelId","setEditChannelId","loadChannels","startIdx","newChannels","splice","ITEMS_PER_PAGE","action","url","delete","handleRefresh","testAllChannels","deleteAllDisabledChannels","handleCloseModal","catch","reason","loadChannelModels","direction","alignItems","justifyContent","mb","Typography","startIcon","IconPlus","Card","Box","component","preventDefault","marginTop","TableToolBar","filterName","handleFilterName","Toolbar","height","display","p","marginBottom","IconRefresh","size","LinearProgress","PerfectScrollbar","TableContainer","Table","minWidth","TableBody","row","TablePagination","page","count","rowsPerPage","onPageChange","onPaginationChange","Math","ceil","rowsPerPageOptions","EditeModal","forwardRef","ref","endIcon","iconStyles","objectFit","StyledLabel","ownerState","pl","pr","mr","ml","_theme$palette$ownerS","_theme$palette$ownerS2","_theme$palette$ownerS3","_theme$palette$ownerS4","_theme$palette$ownerS5","filledVariant","outlinedVariant","softVariant","ghostVariant","defaultStyle","palette","grey","backgroundColor","primary","border","secondary","alpha","colorStyle","background","paper","main","borderRadius","cursor","whiteSpace","pxToRem","fontWeightBold","transition","transitions","create","duration","shorter","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","grey500","startAdornment","InputAdornment","position","IconSearch","stroke","getTextFieldUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","variantComponent","standard","Input","filled","FilledInput","outlined","TextFieldRoot","overridesResolver","styles","root","React","inProps","useDefaultProps","className","FormHelperTextProps","helperText","idOverride","InputLabelProps","InputProps","inputRef","maxRows","onFocus","rows","select","SelectProps","_objectWithoutPropertiesLoose","_extends","classes","composeClasses","useUtilityClasses","InputMore","shrink","notched","native","useId","helperTextId","inputLabelId","InputComponent","InputElement","clsx","labelId","content","top","transform","backgroundImage","encodeURIComponent","getContrastText","left","right","boxShadow"],"sourceRoot":""}