{"version":3,"file":"static/js/814.002a198d.chunk.js","mappings":"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","sources":["ui-component/cards/SubCard.js","views/Setting/component/OperationSetting.js","views/Setting/component/SystemSetting.js","views/Setting/component/OtherSetting.js","views/Setting/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\r\n\r\n// ==============================|| CUSTOM SUB CARD ||============================== //\r\n\r\nconst SubCard = forwardRef(\r\n  ({ children, content, contentClass, darkTitle, secondary, sx = {}, contentSX = {}, title, subTitle, ...others }, ref) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n      <Card\r\n        ref={ref}\r\n        sx={{\r\n          border: theme.typography.SubCard.border,\r\n          ':hover': {\r\n            boxShadow: '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n          },\r\n          ...sx\r\n        }}\r\n        {...others}\r\n      >\r\n        {/* card header and action */}\r\n        {!darkTitle && title && (\r\n          <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h5\">{title}</Typography>} action={secondary} subheader={subTitle} />\r\n        )}\r\n        {darkTitle && title && (\r\n          <CardHeader sx={{ p: 2.5 }} title={<Typography variant=\"h4\">{title}</Typography>} action={secondary} subheader={subTitle} />\r\n        )}\r\n\r\n        {/* content & header divider */}\r\n        {title && (\r\n          <Divider\r\n            sx={{\r\n              opacity: 1\r\n              // borderColor: theme.palette.primary.light\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* card content */}\r\n        {content && (\r\n          <CardContent sx={{ p: 2.5, ...contentSX }} className={contentClass || ''}>\r\n            {children}\r\n          </CardContent>\r\n        )}\r\n        {!content && children}\r\n      </Card>\r\n    );\r\n  }\r\n);\r\n\r\nSubCard.propTypes = {\r\n  children: PropTypes.node,\r\n  content: PropTypes.bool,\r\n  contentClass: PropTypes.string,\r\n  darkTitle: PropTypes.bool,\r\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n  sx: PropTypes.object,\r\n  contentSX: PropTypes.object,\r\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n  subTitle: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nSubCard.defaultProps = {\r\n  content: true\r\n};\r\n\r\nexport default SubCard;\r\n","import { useState, useEffect } from \"react\";\r\nimport SubCard from \"ui-component/cards/SubCard\";\r\nimport {\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Checkbox,\r\n  Button,\r\n  FormControlLabel,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { showSuccess, showError, verifyJSON } from \"utils/common\";\r\nimport { API } from \"utils/api\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport dayjs from \"dayjs\";\r\nrequire(\"dayjs/locale/zh-cn\");\r\n\r\nconst OperationSetting = () => {\r\n  let now = new Date();\r\n  let [inputs, setInputs] = useState({\r\n    QuotaForNewUser: 0,\r\n    QuotaForInviter: 0,\r\n    QuotaForInvitee: 0,\r\n    QuotaRemindThreshold: 0,\r\n    PreConsumedQuota: 0,\r\n    ModelRatio: \"\",\r\n    CompletionRatio: \"\",\r\n    GroupRatio: \"\",\r\n    TopUpLink: \"\",\r\n    ChatLink: \"\",\r\n    QuotaPerUnit: 0,\r\n    AutomaticDisableChannelEnabled: \"\",\r\n    AutomaticEnableChannelEnabled: \"\",\r\n    ChannelDisableThreshold: 0,\r\n    LogConsumeEnabled: \"\",\r\n    DisplayInCurrencyEnabled: \"\",\r\n    DisplayTokenStatEnabled: \"\",\r\n    ApproximateTokenEnabled: \"\",\r\n    RetryTimes: 0,\r\n  });\r\n  const [originInputs, setOriginInputs] = useState({});\r\n  let [loading, setLoading] = useState(false);\r\n  let [historyTimestamp, setHistoryTimestamp] = useState(\r\n    now.getTime() / 1000 - 30 * 24 * 3600\r\n  ); // a month ago new Date().getTime() / 1000 + 3600\r\n\r\n  const getOptions = async () => {\r\n    const res = await API.get(\"/api/option/\");\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      let newInputs = {};\r\n      data.forEach((item) => {\r\n        if (item.key === \"ModelRatio\" || item.key === \"GroupRatio\" || item.key === \"CompletionRatio\") {\r\n          item.value = JSON.stringify(JSON.parse(item.value), null, 2);\r\n        }\r\n        if (item.value === '{}') {\r\n          item.value = '';\r\n        }\r\n        newInputs[item.key] = item.value;\r\n      });\r\n      setInputs(newInputs);\r\n      setOriginInputs(newInputs);\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions().then();\r\n  }, []);\r\n\r\n  const updateOption = async (key, value) => {\r\n    setLoading(true);\r\n    if (key.endsWith(\"Enabled\")) {\r\n      value = inputs[key] === \"true\" ? \"false\" : \"true\";\r\n    }\r\n    const res = await API.put(\"/api/option/\", {\r\n      key,\r\n      value,\r\n    });\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      setInputs((inputs) => ({ ...inputs, [key]: value }));\r\n    } else {\r\n      showError(message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleInputChange = async (event) => {\r\n    let { name, value } = event.target;\r\n\r\n    if (name.endsWith(\"Enabled\")) {\r\n      await updateOption(name, value);\r\n      showSuccess(\"设置成功！\");\r\n    } else {\r\n      setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const submitConfig = async (group) => {\r\n    switch (group) {\r\n      case \"monitor\":\r\n        if (\r\n          originInputs[\"ChannelDisableThreshold\"] !==\r\n          inputs.ChannelDisableThreshold\r\n        ) {\r\n          await updateOption(\r\n            \"ChannelDisableThreshold\",\r\n            inputs.ChannelDisableThreshold\r\n          );\r\n        }\r\n        if (\r\n          originInputs[\"QuotaRemindThreshold\"] !== inputs.QuotaRemindThreshold\r\n        ) {\r\n          await updateOption(\r\n            \"QuotaRemindThreshold\",\r\n            inputs.QuotaRemindThreshold\r\n          );\r\n        }\r\n        break;\r\n      case \"ratio\":\r\n        if (originInputs[\"ModelRatio\"] !== inputs.ModelRatio) {\r\n          if (!verifyJSON(inputs.ModelRatio)) {\r\n            showError(\"模型倍率不是合法的 JSON 字符串\");\r\n            return;\r\n          }\r\n          await updateOption(\"ModelRatio\", inputs.ModelRatio);\r\n        }\r\n        if (originInputs[\"GroupRatio\"] !== inputs.GroupRatio) {\r\n          if (!verifyJSON(inputs.GroupRatio)) {\r\n            showError(\"分组倍率不是合法的 JSON 字符串\");\r\n            return;\r\n          }\r\n          await updateOption(\"GroupRatio\", inputs.GroupRatio);\r\n        }\r\n        if (originInputs['CompletionRatio'] !== inputs.CompletionRatio) {\r\n          if (!verifyJSON(inputs.CompletionRatio)) {\r\n            showError('补全倍率不是合法的 JSON 字符串');\r\n            return;\r\n          }\r\n          await updateOption('CompletionRatio', inputs.CompletionRatio);\r\n        }\r\n        break;\r\n      case \"quota\":\r\n        if (originInputs[\"QuotaForNewUser\"] !== inputs.QuotaForNewUser) {\r\n          await updateOption(\"QuotaForNewUser\", inputs.QuotaForNewUser);\r\n        }\r\n        if (originInputs[\"QuotaForInvitee\"] !== inputs.QuotaForInvitee) {\r\n          await updateOption(\"QuotaForInvitee\", inputs.QuotaForInvitee);\r\n        }\r\n        if (originInputs[\"QuotaForInviter\"] !== inputs.QuotaForInviter) {\r\n          await updateOption(\"QuotaForInviter\", inputs.QuotaForInviter);\r\n        }\r\n        if (originInputs[\"PreConsumedQuota\"] !== inputs.PreConsumedQuota) {\r\n          await updateOption(\"PreConsumedQuota\", inputs.PreConsumedQuota);\r\n        }\r\n        break;\r\n      case \"general\":\r\n        if (originInputs[\"TopUpLink\"] !== inputs.TopUpLink) {\r\n          await updateOption(\"TopUpLink\", inputs.TopUpLink);\r\n        }\r\n        if (originInputs[\"ChatLink\"] !== inputs.ChatLink) {\r\n          await updateOption(\"ChatLink\", inputs.ChatLink);\r\n        }\r\n        if (originInputs[\"QuotaPerUnit\"] !== inputs.QuotaPerUnit) {\r\n          await updateOption(\"QuotaPerUnit\", inputs.QuotaPerUnit);\r\n        }\r\n        if (originInputs[\"RetryTimes\"] !== inputs.RetryTimes) {\r\n          await updateOption(\"RetryTimes\", inputs.RetryTimes);\r\n        }\r\n        break;\r\n    }\r\n\r\n    showSuccess(\"保存成功！\");\r\n  };\r\n\r\n  const deleteHistoryLogs = async () => {\r\n    const res = await API.delete(\r\n      `/api/log/?target_timestamp=${Math.floor(historyTimestamp)}`\r\n    );\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      showSuccess(`${data} 条日志已清理！`);\r\n      return;\r\n    }\r\n    showError(\"日志清理失败：\" + message);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={2}>\r\n      <SubCard title=\"通用设置\">\r\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\r\n          <Stack\r\n            direction={{ sm: \"column\", md: \"row\" }}\r\n            spacing={{ xs: 3, sm: 2, md: 4 }}\r\n          >\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"TopUpLink\">充值链接</InputLabel>\r\n              <OutlinedInput\r\n                id=\"TopUpLink\"\r\n                name=\"TopUpLink\"\r\n                value={inputs.TopUpLink}\r\n                onChange={handleInputChange}\r\n                label=\"充值链接\"\r\n                placeholder=\"例如发卡网站的购买链接\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"ChatLink\">聊天链接</InputLabel>\r\n              <OutlinedInput\r\n                id=\"ChatLink\"\r\n                name=\"ChatLink\"\r\n                value={inputs.ChatLink}\r\n                onChange={handleInputChange}\r\n                label=\"聊天链接\"\r\n                placeholder=\"例如 ChatGPT Next Web 的部署地址\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"QuotaPerUnit\">单位额度</InputLabel>\r\n              <OutlinedInput\r\n                id=\"QuotaPerUnit\"\r\n                name=\"QuotaPerUnit\"\r\n                value={inputs.QuotaPerUnit}\r\n                onChange={handleInputChange}\r\n                label=\"单位额度\"\r\n                placeholder=\"一单位货币能兑换的额度\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"RetryTimes\">重试次数</InputLabel>\r\n              <OutlinedInput\r\n                id=\"RetryTimes\"\r\n                name=\"RetryTimes\"\r\n                value={inputs.RetryTimes}\r\n                onChange={handleInputChange}\r\n                label=\"重试次数\"\r\n                placeholder=\"重试次数\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n          <Stack\r\n            direction={{ sm: \"column\", md: \"row\" }}\r\n            spacing={{ xs: 3, sm: 2, md: 4 }}\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n          >\r\n            <FormControlLabel\r\n              sx={{ marginLeft: \"0px\" }}\r\n              label=\"以货币形式显示额度\"\r\n              control={\r\n                <Checkbox\r\n                  checked={inputs.DisplayInCurrencyEnabled === \"true\"}\r\n                  onChange={handleInputChange}\r\n                  name=\"DisplayInCurrencyEnabled\"\r\n                />\r\n              }\r\n            />\r\n\r\n            <FormControlLabel\r\n              label=\"Billing 相关 API 显示令牌额度而非用户额度\"\r\n              control={\r\n                <Checkbox\r\n                  checked={inputs.DisplayTokenStatEnabled === \"true\"}\r\n                  onChange={handleInputChange}\r\n                  name=\"DisplayTokenStatEnabled\"\r\n                />\r\n              }\r\n            />\r\n\r\n            <FormControlLabel\r\n              label=\"使用近似的方式估算 token 数以减少计算量\"\r\n              control={\r\n                <Checkbox\r\n                  checked={inputs.ApproximateTokenEnabled === \"true\"}\r\n                  onChange={handleInputChange}\r\n                  name=\"ApproximateTokenEnabled\"\r\n                />\r\n              }\r\n            />\r\n          </Stack>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              submitConfig(\"general\").then();\r\n            }}\r\n          >\r\n            保存通用设置\r\n          </Button>\r\n        </Stack>\r\n      </SubCard>\r\n      <SubCard title=\"日志设置\">\r\n        <Stack\r\n          direction=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={2}\r\n        >\r\n          <FormControlLabel\r\n            label=\"启用日志消费\"\r\n            control={\r\n              <Checkbox\r\n                checked={inputs.LogConsumeEnabled === \"true\"}\r\n                onChange={handleInputChange}\r\n                name=\"LogConsumeEnabled\"\r\n              />\r\n            }\r\n          />\r\n\r\n          <FormControl>\r\n            <LocalizationProvider\r\n              dateAdapter={AdapterDayjs}\r\n              adapterLocale={\"zh-cn\"}\r\n            >\r\n              <DateTimePicker\r\n                label=\"日志清理时间\"\r\n                placeholder=\"日志清理时间\"\r\n                ampm={false}\r\n                name=\"historyTimestamp\"\r\n                value={\r\n                  historyTimestamp === null\r\n                    ? null\r\n                    : dayjs.unix(historyTimestamp)\r\n                }\r\n                disabled={loading}\r\n                onChange={(newValue) => {\r\n                  setHistoryTimestamp(\r\n                    newValue === null ? null : newValue.unix()\r\n                  );\r\n                }}\r\n                slotProps={{\r\n                  actionBar: {\r\n                    actions: [\"today\", \"clear\", \"accept\"],\r\n                  },\r\n                }}\r\n              />\r\n            </LocalizationProvider>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              deleteHistoryLogs().then();\r\n            }}\r\n          >\r\n            清理历史日志\r\n          </Button>\r\n        </Stack>\r\n      </SubCard>\r\n      <SubCard title=\"监控设置\">\r\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\r\n          <Stack\r\n            direction={{ sm: \"column\", md: \"row\" }}\r\n            spacing={{ xs: 3, sm: 2, md: 4 }}\r\n          >\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"ChannelDisableThreshold\">\r\n                最长响应时间\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"ChannelDisableThreshold\"\r\n                name=\"ChannelDisableThreshold\"\r\n                type=\"number\"\r\n                value={inputs.ChannelDisableThreshold}\r\n                onChange={handleInputChange}\r\n                label=\"最长响应时间\"\r\n                placeholder=\"单位秒，当运行渠道全部测试时，超过此时间将自动禁用渠道\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"QuotaRemindThreshold\">\r\n                额度提醒阈值\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"QuotaRemindThreshold\"\r\n                name=\"QuotaRemindThreshold\"\r\n                type=\"number\"\r\n                value={inputs.QuotaRemindThreshold}\r\n                onChange={handleInputChange}\r\n                label=\"额度提醒阈值\"\r\n                placeholder=\"低于此额度时将发送邮件提醒用户\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n          <FormControlLabel\r\n            label=\"失败时自动禁用渠道\"\r\n            control={\r\n              <Checkbox\r\n                checked={inputs.AutomaticDisableChannelEnabled === \"true\"}\r\n                onChange={handleInputChange}\r\n                name=\"AutomaticDisableChannelEnabled\"\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"成功时自动启用渠道\"\r\n            control={\r\n              <Checkbox\r\n                checked={inputs.AutomaticEnableChannelEnabled === \"true\"}\r\n                onChange={handleInputChange}\r\n                name=\"AutomaticEnableChannelEnabled\"\r\n              />\r\n            }\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              submitConfig(\"monitor\").then();\r\n            }}\r\n          >\r\n            保存监控设置\r\n          </Button>\r\n        </Stack>\r\n      </SubCard>\r\n      <SubCard title=\"额度设置\">\r\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\r\n          <Stack\r\n            direction={{ sm: \"column\", md: \"row\" }}\r\n            spacing={{ xs: 3, sm: 2, md: 4 }}\r\n          >\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"QuotaForNewUser\">新用户初始额度</InputLabel>\r\n              <OutlinedInput\r\n                id=\"QuotaForNewUser\"\r\n                name=\"QuotaForNewUser\"\r\n                type=\"number\"\r\n                value={inputs.QuotaForNewUser}\r\n                onChange={handleInputChange}\r\n                label=\"新用户初始额度\"\r\n                placeholder=\"例如：100\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"PreConsumedQuota\">请求预扣费额度</InputLabel>\r\n              <OutlinedInput\r\n                id=\"PreConsumedQuota\"\r\n                name=\"PreConsumedQuota\"\r\n                type=\"number\"\r\n                value={inputs.PreConsumedQuota}\r\n                onChange={handleInputChange}\r\n                label=\"请求预扣费额度\"\r\n                placeholder=\"请求结束后多退少补\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"QuotaForInviter\">\r\n                邀请新用户奖励额度\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"QuotaForInviter\"\r\n                name=\"QuotaForInviter\"\r\n                type=\"number\"\r\n                label=\"邀请新用户奖励额度\"\r\n                value={inputs.QuotaForInviter}\r\n                onChange={handleInputChange}\r\n                placeholder=\"例如：2000\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"QuotaForInvitee\">\r\n                新用户使用邀请码奖励额度\r\n              </InputLabel>\r\n              <OutlinedInput\r\n                id=\"QuotaForInvitee\"\r\n                name=\"QuotaForInvitee\"\r\n                type=\"number\"\r\n                label=\"新用户使用邀请码奖励额度\"\r\n                value={inputs.QuotaForInvitee}\r\n                onChange={handleInputChange}\r\n                autoComplete=\"new-password\"\r\n                placeholder=\"例如：1000\"\r\n                disabled={loading}\r\n              />\r\n            </FormControl>\r\n          </Stack>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              submitConfig(\"quota\").then();\r\n            }}\r\n          >\r\n            保存额度设置\r\n          </Button>\r\n        </Stack>\r\n      </SubCard>\r\n      <SubCard title=\"倍率设置\">\r\n        <Stack justifyContent=\"flex-start\" alignItems=\"flex-start\" spacing={2}>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              multiline\r\n              maxRows={15}\r\n              id=\"channel-ModelRatio-label\"\r\n              label=\"模型倍率\"\r\n              value={inputs.ModelRatio}\r\n              name=\"ModelRatio\"\r\n              onChange={handleInputChange}\r\n              aria-describedby=\"helper-text-channel-ModelRatio-label\"\r\n              minRows={5}\r\n              placeholder=\"为一个 JSON 文本，键为模型名称，值为倍率\"\r\n            />\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              multiline\r\n              maxRows={15}\r\n              id=\"channel-CompletionRatio-label\"\r\n              label=\"补全倍率\"\r\n              value={inputs.CompletionRatio}\r\n              name=\"CompletionRatio\"\r\n              onChange={handleInputChange}\r\n              aria-describedby=\"helper-text-channel-CompletionRatio-label\"\r\n              minRows={5}\r\n              placeholder=\"为一个 JSON 文本，键为模型名称，值为倍率，此处的倍率设置是模型补全倍率相较于提示倍率的比例，使用该设置可强制覆盖 One API 的内部比例\"\r\n            />\r\n          </FormControl>\r\n          <FormControl fullWidth>\r\n            <TextField\r\n              multiline\r\n              maxRows={15}\r\n              id=\"channel-GroupRatio-label\"\r\n              label=\"分组倍率\"\r\n              value={inputs.GroupRatio}\r\n              name=\"GroupRatio\"\r\n              onChange={handleInputChange}\r\n              aria-describedby=\"helper-text-channel-GroupRatio-label\"\r\n              minRows={5}\r\n              placeholder=\"为一个 JSON 文本，键为分组名称，值为倍率\"\r\n            />\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              submitConfig(\"ratio\").then();\r\n            }}\r\n          >\r\n            保存倍率设置\r\n          </Button>\r\n        </Stack>\r\n      </SubCard>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default OperationSetting;\r\n","import { useState, useEffect } from 'react';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport {\r\n  Stack,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Checkbox,\r\n  Button,\r\n  FormControlLabel,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Divider,\r\n  Alert,\r\n  Autocomplete,\r\n  TextField\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport { showError, showSuccess, removeTrailingSlash } from 'utils/common'; //,\r\nimport { API } from 'utils/api';\r\nimport { createFilterOptions } from '@mui/material/Autocomplete';\r\n\r\nconst filter = createFilterOptions();\r\nconst SystemSetting = () => {\r\n  let [inputs, setInputs] = useState({\r\n    PasswordLoginEnabled: '',\r\n    PasswordRegisterEnabled: '',\r\n    EmailVerificationEnabled: '',\r\n    GitHubOAuthEnabled: '',\r\n    GitHubClientId: '',\r\n    GitHubClientSecret: '',\r\n    LarkClientId: '',\r\n    LarkClientSecret: '',\r\n    OidcEnabled: '',\r\n    OidcWellKnown: '',\r\n    OidcClientId: '',\r\n    OidcClientSecret: '',\r\n    OidcAuthorizationEndpoint: '',\r\n    OidcTokenEndpoint: '',\r\n    OidcUserinfoEndpoint: '',\r\n    Notice: '',\r\n    SMTPServer: '',\r\n    SMTPPort: '',\r\n    SMTPAccount: '',\r\n    SMTPFrom: '',\r\n    SMTPToken: '',\r\n    ServerAddress: '',\r\n    Footer: '',\r\n    WeChatAuthEnabled: '',\r\n    WeChatServerAddress: '',\r\n    WeChatServerToken: '',\r\n    WeChatAccountQRCodeImageURL: '',\r\n    TurnstileCheckEnabled: '',\r\n    TurnstileSiteKey: '',\r\n    TurnstileSecretKey: '',\r\n    RegisterEnabled: '',\r\n    EmailDomainRestrictionEnabled: '',\r\n    EmailDomainWhitelist: [],\r\n    MessagePusherAddress: '',\r\n    MessagePusherToken: ''\r\n  });\r\n  const [originInputs, setOriginInputs] = useState({});\r\n  let [loading, setLoading] = useState(false);\r\n  const [EmailDomainWhitelist, setEmailDomainWhitelist] = useState([]);\r\n  const [showPasswordWarningModal, setShowPasswordWarningModal] = useState(false);\r\n\r\n  const getOptions = async () => {\r\n    const res = await API.get('/api/option/');\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      let newInputs = {};\r\n      data.forEach((item) => {\r\n        newInputs[item.key] = item.value;\r\n      });\r\n      setInputs({\r\n        ...newInputs,\r\n        EmailDomainWhitelist: newInputs.EmailDomainWhitelist.split(',')\r\n      });\r\n      setOriginInputs(newInputs);\r\n\r\n      setEmailDomainWhitelist(newInputs.EmailDomainWhitelist.split(','));\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions().then();\r\n  }, []);\r\n\r\n  const updateOption = async (key, value) => {\r\n    setLoading(true);\r\n    switch (key) {\r\n      case 'PasswordLoginEnabled':\r\n      case 'PasswordRegisterEnabled':\r\n      case 'EmailVerificationEnabled':\r\n      case 'GitHubOAuthEnabled':\r\n      case 'WeChatAuthEnabled':\r\n      case 'TurnstileCheckEnabled':\r\n      case 'EmailDomainRestrictionEnabled':\r\n      case 'RegisterEnabled':\r\n      case 'OidcEnabled':\r\n        value = inputs[key] === 'true' ? 'false' : 'true';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    const res = await API.put('/api/option/', {\r\n      key,\r\n      value\r\n    });\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      if (key === 'EmailDomainWhitelist') {\r\n        value = value.split(',');\r\n      }\r\n      setInputs((inputs) => ({\r\n        ...inputs,\r\n        [key]: value\r\n      }));\r\n      showSuccess('设置成功！');\r\n    } else {\r\n      showError(message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleInputChange = async (event) => {\r\n    let { name, value } = event.target;\r\n\r\n    if (name === 'PasswordLoginEnabled' && inputs[name] === 'true') {\r\n      // block disabling password login\r\n      setShowPasswordWarningModal(true);\r\n      return;\r\n    }\r\n    if (\r\n      name === 'Notice' ||\r\n      name.startsWith('SMTP') ||\r\n      name === 'ServerAddress' ||\r\n      name === 'GitHubClientId' ||\r\n      name === 'GitHubClientSecret' ||\r\n      name === 'WeChatServerAddress' ||\r\n      name === 'WeChatServerToken' ||\r\n      name === 'WeChatAccountQRCodeImageURL' ||\r\n      name === 'TurnstileSiteKey' ||\r\n      name === 'TurnstileSecretKey' ||\r\n      name === 'EmailDomainWhitelist' ||\r\n      name === 'MessagePusherAddress' ||\r\n      name === 'MessagePusherToken' ||\r\n      name === 'LarkClientId' ||\r\n      name === 'LarkClientSecret' ||\r\n      name === 'OidcClientId' ||\r\n      name === 'OidcClientSecret' ||\r\n      name === 'OidcWellKnown' ||\r\n      name === 'OidcAuthorizationEndpoint' ||\r\n      name === 'OidcTokenEndpoint' ||\r\n      name === 'OidcUserinfoEndpoint'\r\n    )\r\n    {\r\n      setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n    } else {\r\n      await updateOption(name, value);\r\n    }\r\n  };\r\n\r\n  const submitServerAddress = async () => {\r\n    let ServerAddress = removeTrailingSlash(inputs.ServerAddress);\r\n    await updateOption('ServerAddress', ServerAddress);\r\n  };\r\n\r\n  const submitSMTP = async () => {\r\n    if (originInputs['SMTPServer'] !== inputs.SMTPServer) {\r\n      await updateOption('SMTPServer', inputs.SMTPServer);\r\n    }\r\n    if (originInputs['SMTPAccount'] !== inputs.SMTPAccount) {\r\n      await updateOption('SMTPAccount', inputs.SMTPAccount);\r\n    }\r\n    if (originInputs['SMTPFrom'] !== inputs.SMTPFrom) {\r\n      await updateOption('SMTPFrom', inputs.SMTPFrom);\r\n    }\r\n    if (originInputs['SMTPPort'] !== inputs.SMTPPort && inputs.SMTPPort !== '') {\r\n      await updateOption('SMTPPort', inputs.SMTPPort);\r\n    }\r\n    if (originInputs['SMTPToken'] !== inputs.SMTPToken && inputs.SMTPToken !== '') {\r\n      await updateOption('SMTPToken', inputs.SMTPToken);\r\n    }\r\n  };\r\n\r\n  const submitEmailDomainWhitelist = async () => {\r\n    await updateOption('EmailDomainWhitelist', inputs.EmailDomainWhitelist.join(','));\r\n  };\r\n\r\n  const submitWeChat = async () => {\r\n    if (originInputs['WeChatServerAddress'] !== inputs.WeChatServerAddress) {\r\n      await updateOption('WeChatServerAddress', removeTrailingSlash(inputs.WeChatServerAddress));\r\n    }\r\n    if (originInputs['WeChatAccountQRCodeImageURL'] !== inputs.WeChatAccountQRCodeImageURL) {\r\n      await updateOption('WeChatAccountQRCodeImageURL', inputs.WeChatAccountQRCodeImageURL);\r\n    }\r\n    if (originInputs['WeChatServerToken'] !== inputs.WeChatServerToken && inputs.WeChatServerToken !== '') {\r\n      await updateOption('WeChatServerToken', inputs.WeChatServerToken);\r\n    }\r\n  };\r\n\r\n  const submitGitHubOAuth = async () => {\r\n    if (originInputs['GitHubClientId'] !== inputs.GitHubClientId) {\r\n      await updateOption('GitHubClientId', inputs.GitHubClientId);\r\n    }\r\n    if (originInputs['GitHubClientSecret'] !== inputs.GitHubClientSecret && inputs.GitHubClientSecret !== '') {\r\n      await updateOption('GitHubClientSecret', inputs.GitHubClientSecret);\r\n    }\r\n  };\r\n\r\n  const submitTurnstile = async () => {\r\n    if (originInputs['TurnstileSiteKey'] !== inputs.TurnstileSiteKey) {\r\n      await updateOption('TurnstileSiteKey', inputs.TurnstileSiteKey);\r\n    }\r\n    if (originInputs['TurnstileSecretKey'] !== inputs.TurnstileSecretKey && inputs.TurnstileSecretKey !== '') {\r\n      await updateOption('TurnstileSecretKey', inputs.TurnstileSecretKey);\r\n    }\r\n  };\r\n\r\n  const submitMessagePusher = async () => {\r\n    if (originInputs['MessagePusherAddress'] !== inputs.MessagePusherAddress) {\r\n      await updateOption('MessagePusherAddress', removeTrailingSlash(inputs.MessagePusherAddress));\r\n    }\r\n    if (originInputs['MessagePusherToken'] !== inputs.MessagePusherToken && inputs.MessagePusherToken !== '') {\r\n      await updateOption('MessagePusherToken', inputs.MessagePusherToken);\r\n    }\r\n  };\r\n\r\n  const submitLarkOAuth = async () => {\r\n    if (originInputs['LarkClientId'] !== inputs.LarkClientId) {\r\n      await updateOption('LarkClientId', inputs.LarkClientId);\r\n    }\r\n    if (originInputs['LarkClientSecret'] !== inputs.LarkClientSecret && inputs.LarkClientSecret !== '') {\r\n      await updateOption('LarkClientSecret', inputs.LarkClientSecret);\r\n    }\r\n  };\r\n\r\n  const submitOidc = async () => {\r\n    if (inputs.OidcWellKnown !== '') {\r\n      if (!inputs.OidcWellKnown.startsWith('http://') && !inputs.OidcWellKnown.startsWith('https://')) {\r\n        showError('Well-Known URL 必须以 http:// 或 https:// 开头');\r\n        return;\r\n      }\r\n      try {\r\n        const res = await API.get(inputs.OidcWellKnown);\r\n        inputs.OidcAuthorizationEndpoint = res.data['authorization_endpoint'];\r\n        inputs.OidcTokenEndpoint = res.data['token_endpoint'];\r\n        inputs.OidcUserinfoEndpoint = res.data['userinfo_endpoint'];\r\n        showSuccess('获取 OIDC 配置成功！');\r\n      } catch (err) {\r\n        showError(\"获取 OIDC 配置失败，请检查网络状况和 Well-Known URL 是否正确\");\r\n      }\r\n    }\r\n\r\n    if (originInputs['OidcWellKnown'] !== inputs.OidcWellKnown) {\r\n      await updateOption('OidcWellKnown', inputs.OidcWellKnown);\r\n    }\r\n    if (originInputs['OidcClientId'] !== inputs.OidcClientId) {\r\n      await updateOption('OidcClientId', inputs.OidcClientId);\r\n    }\r\n    if (originInputs['OidcClientSecret'] !== inputs.OidcClientSecret && inputs.OidcClientSecret !== '') {\r\n      await updateOption('OidcClientSecret', inputs.OidcClientSecret);\r\n    }\r\n    if (originInputs['OidcAuthorizationEndpoint'] !== inputs.OidcAuthorizationEndpoint) {\r\n      await updateOption('OidcAuthorizationEndpoint', inputs.OidcAuthorizationEndpoint);\r\n    }\r\n    if (originInputs['OidcTokenEndpoint'] !== inputs.OidcTokenEndpoint) {\r\n      await updateOption('OidcTokenEndpoint', inputs.OidcTokenEndpoint);\r\n    }\r\n    if (originInputs['OidcUserinfoEndpoint'] !== inputs.OidcUserinfoEndpoint) {\r\n      await updateOption('OidcUserinfoEndpoint', inputs.OidcUserinfoEndpoint);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={2}>\r\n        <SubCard title=\"通用设置\">\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"ServerAddress\">服务器地址</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"ServerAddress\"\r\n                  name=\"ServerAddress\"\r\n                  value={inputs.ServerAddress || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"服务器地址\"\r\n                  placeholder=\"例如：https://yourdomain.com\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitServerAddress}>\r\n                更新服务器地址\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard title=\"配置登录注册\">\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"允许通过密码进行登录\"\r\n                control={\r\n                  <Checkbox checked={inputs.PasswordLoginEnabled === 'true'} onChange={handleInputChange} name=\"PasswordLoginEnabled\" />\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"允许通过密码进行注册\"\r\n                control={\r\n                  <Checkbox\r\n                    checked={inputs.PasswordRegisterEnabled === 'true'}\r\n                    onChange={handleInputChange}\r\n                    name=\"PasswordRegisterEnabled\"\r\n                  />\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"通过密码注册时需要进行邮箱验证\"\r\n                control={\r\n                  <Checkbox\r\n                    checked={inputs.EmailVerificationEnabled === 'true'}\r\n                    onChange={handleInputChange}\r\n                    name=\"EmailVerificationEnabled\"\r\n                  />\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"允许通过 GitHub 账户登录 & 注册\"\r\n                control={<Checkbox checked={inputs.GitHubOAuthEnabled === 'true'} onChange={handleInputChange} name=\"GitHubOAuthEnabled\" />}\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"允许通过 OIDC 登录 & 注册\"\r\n                control={<Checkbox checked={inputs.OidcEnabled === 'true'} onChange={handleInputChange} name=\"OidcEnabled\" />}\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"允许通过微信登录 & 注册\"\r\n                control={<Checkbox checked={inputs.WeChatAuthEnabled === 'true'} onChange={handleInputChange} name=\"WeChatAuthEnabled\" />}\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"允许新用户注册（此项为否时，新用户将无法以任何方式进行注册）\"\r\n                control={<Checkbox checked={inputs.RegisterEnabled === 'true'} onChange={handleInputChange} name=\"RegisterEnabled\" />}\r\n              />\r\n            </Grid>\r\n            <Grid xs={12} md={3}>\r\n              <FormControlLabel\r\n                label=\"启用 Turnstile 用户校验\"\r\n                control={\r\n                  <Checkbox checked={inputs.TurnstileCheckEnabled === 'true'} onChange={handleInputChange} name=\"TurnstileCheckEnabled\" />\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard title=\"配置邮箱域名白名单\" subTitle=\"用以防止恶意用户利用临时邮箱批量注册\">\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12}>\r\n              <FormControlLabel\r\n                label=\"启用邮箱域名白名单\"\r\n                control={\r\n                  <Checkbox\r\n                    checked={inputs.EmailDomainRestrictionEnabled === 'true'}\r\n                    onChange={handleInputChange}\r\n                    name=\"EmailDomainRestrictionEnabled\"\r\n                  />\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <Autocomplete\r\n                  multiple\r\n                  freeSolo\r\n                  id=\"EmailDomainWhitelist\"\r\n                  options={EmailDomainWhitelist}\r\n                  value={inputs.EmailDomainWhitelist}\r\n                  onChange={(e, value) => {\r\n                    const event = {\r\n                      target: {\r\n                        name: 'EmailDomainWhitelist',\r\n                        value: value\r\n                      }\r\n                    };\r\n                    handleInputChange(event);\r\n                  }}\r\n                  filterSelectedOptions\r\n                  renderInput={(params) => <TextField {...params} name=\"EmailDomainWhitelist\" label=\"允许的邮箱域名\" />}\r\n                  filterOptions={(options, params) => {\r\n                    const filtered = filter(options, params);\r\n                    const { inputValue } = params;\r\n                    const isExisting = options.some((option) => inputValue === option);\r\n                    if (inputValue !== '' && !isExisting) {\r\n                      filtered.push(inputValue);\r\n                    }\r\n                    return filtered;\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitEmailDomainWhitelist}>\r\n                保存邮箱域名白名单设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard title=\"配置 SMTP\" subTitle=\"用以支持系统的邮件发送\">\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"SMTPServer\">SMTP 服务器地址</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"SMTPServer\"\r\n                  name=\"SMTPServer\"\r\n                  value={inputs.SMTPServer || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"SMTP 服务器地址\"\r\n                  placeholder=\"例如：smtp.qq.com\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"SMTPPort\">SMTP 端口</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"SMTPPort\"\r\n                  name=\"SMTPPort\"\r\n                  value={inputs.SMTPPort || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"SMTP 端口\"\r\n                  placeholder=\"默认: 587\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"SMTPAccount\">SMTP 账户</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"SMTPAccount\"\r\n                  name=\"SMTPAccount\"\r\n                  value={inputs.SMTPAccount || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"SMTP 账户\"\r\n                  placeholder=\"通常是邮箱地址\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"SMTPFrom\">SMTP 发送者邮箱</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"SMTPFrom\"\r\n                  name=\"SMTPFrom\"\r\n                  value={inputs.SMTPFrom || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"SMTP 发送者邮箱\"\r\n                  placeholder=\"通常和邮箱地址保持一致\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"SMTPToken\">SMTP 访问凭证</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"SMTPToken\"\r\n                  name=\"SMTPToken\"\r\n                  value={inputs.SMTPToken || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"SMTP 访问凭证\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitSMTP}>\r\n                保存 SMTP 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard\r\n          title=\"配置 GitHub OAuth App\"\r\n          subTitle={\r\n            <span>\r\n              {' '}\r\n              用以支持通过 GitHub 进行登录注册，\r\n              <a href=\"https://github.com/settings/developers\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                点击此处\r\n              </a>\r\n              管理你的 GitHub OAuth App\r\n            </span>\r\n          }\r\n        >\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12}>\r\n              <Alert severity=\"info\" sx={{ wordWrap: 'break-word' }}>\r\n                Homepage URL 填 <b>{inputs.ServerAddress}</b>\r\n                ，Authorization callback URL 填 <b>{`${inputs.ServerAddress}/oauth/github`}</b>\r\n              </Alert>\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"GitHubClientId\">GitHub Client ID</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"GitHubClientId\"\r\n                  name=\"GitHubClientId\"\r\n                  value={inputs.GitHubClientId || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"GitHub Client ID\"\r\n                  placeholder=\"输入你注册的 GitHub OAuth APP 的 ID\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"GitHubClientSecret\">GitHub Client Secret</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"GitHubClientSecret\"\r\n                  name=\"GitHubClientSecret\"\r\n                  value={inputs.GitHubClientSecret || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"GitHub Client Secret\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitGitHubOAuth}>\r\n                保存 GitHub OAuth 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard\r\n          title=\"配置飞书授权登录\"\r\n          subTitle={\r\n            <span>\r\n              {' '}\r\n              用以支持通过飞书进行登录注册，\r\n              <a href=\"https://open.feishu.cn/app\" target=\"_blank\" rel=\"noreferrer\">\r\n                点击此处\r\n              </a>\r\n              管理你的飞书应用\r\n            </span>\r\n          }\r\n        >\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12}>\r\n              <Alert severity=\"info\" sx={{ wordWrap: 'break-word' }}>\r\n                主页链接填 <code>{inputs.ServerAddress}</code>\r\n                ，重定向 URL 填 <code>{`${inputs.ServerAddress}/oauth/lark`}</code>\r\n              </Alert>\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"LarkClientId\">App ID</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"LarkClientId\"\r\n                  name=\"LarkClientId\"\r\n                  value={inputs.LarkClientId || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"App ID\"\r\n                  placeholder=\"输入 App ID\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"LarkClientSecret\">App Secret</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"LarkClientSecret\"\r\n                  name=\"LarkClientSecret\"\r\n                  value={inputs.LarkClientSecret || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"App Secret\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitLarkOAuth}>\r\n                保存飞书 OAuth 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard\r\n          title=\"配置 WeChat Server\"\r\n          subTitle={\r\n            <span>\r\n              用以支持通过微信进行登录注册，\r\n              <a href=\"https://github.com/songquanpeng/wechat-server\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                点击此处\r\n              </a>\r\n              了解 WeChat Server\r\n            </span>\r\n          }\r\n        >\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"WeChatServerAddress\">WeChat Server 服务器地址</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"WeChatServerAddress\"\r\n                  name=\"WeChatServerAddress\"\r\n                  value={inputs.WeChatServerAddress || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"WeChat Server 服务器地址\"\r\n                  placeholder=\"例如：https://yourdomain.com\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"WeChatServerToken\">WeChat Server 访问凭证</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"WeChatServerToken\"\r\n                  name=\"WeChatServerToken\"\r\n                  value={inputs.WeChatServerToken || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"WeChat Server 访问凭证\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={4}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"WeChatAccountQRCodeImageURL\">微信公众号二维码图片链接</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"WeChatAccountQRCodeImageURL\"\r\n                  name=\"WeChatAccountQRCodeImageURL\"\r\n                  value={inputs.WeChatAccountQRCodeImageURL || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"微信公众号二维码图片链接\"\r\n                  placeholder=\"输入一个图片链接\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitWeChat}>\r\n                保存 WeChat Server 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n\r\n        <SubCard\r\n          title=\"配置 OIDC\"\r\n          subTitle={\r\n            <span>\r\n              用以支持通过 OIDC 登录，例如 Okta、Auth0 等兼容 OIDC 协议的 IdP\r\n            </span>\r\n          }\r\n        >\r\n          <Grid container spacing={ { xs: 3, sm: 2, md: 4 } }>\r\n            <Grid xs={ 12 } md={ 12 }>\r\n              <Alert severity=\"info\" sx={ { wordWrap: 'break-word' } }>\r\n                主页链接填 <code>{ inputs.ServerAddress }</code>\r\n                ，重定向 URL 填 <code>{ `${ inputs.ServerAddress }/oauth/oidc` }</code>\r\n              </Alert> <br />\r\n              <Alert severity=\"info\" sx={ { wordWrap: 'break-word' } }>\r\n                若你的 OIDC Provider 支持 Discovery Endpoint，你可以仅填写 OIDC Well-Known URL，系统会自动获取 OIDC 配置\r\n              </Alert>\r\n            </Grid>\r\n            <Grid xs={ 12 } md={ 6 }>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"OidcClientId\">Client ID</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"OidcClientId\"\r\n                  name=\"OidcClientId\"\r\n                  value={ inputs.OidcClientId || '' }\r\n                  onChange={ handleInputChange }\r\n                  label=\"Client ID\"\r\n                  placeholder=\"输入 OIDC 的 Client ID\"\r\n                  disabled={ loading }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={ 12 } md={ 6 }>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"OidcClientSecret\">Client Secret</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"OidcClientSecret\"\r\n                  name=\"OidcClientSecret\"\r\n                  value={ inputs.OidcClientSecret || '' }\r\n                  onChange={ handleInputChange }\r\n                  label=\"Client Secret\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={ loading }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={ 12 } md={ 6 }>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"OidcWellKnown\">Well-Known URL</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"OidcWellKnown\"\r\n                  name=\"OidcWellKnown\"\r\n                  value={ inputs.OidcWellKnown || '' }\r\n                  onChange={ handleInputChange }\r\n                  label=\"Well-Known URL\"\r\n                  placeholder=\"请输入 OIDC 的 Well-Known URL\"\r\n                  disabled={ loading }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={ 12 } md={ 6 }>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"OidcAuthorizationEndpoint\">Authorization Endpoint</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"OidcAuthorizationEndpoint\"\r\n                  name=\"OidcAuthorizationEndpoint\"\r\n                  value={ inputs.OidcAuthorizationEndpoint || '' }\r\n                  onChange={ handleInputChange }\r\n                  label=\"Authorization Endpoint\"\r\n                  placeholder=\"输入 OIDC 的 Authorization Endpoint\"\r\n                  disabled={ loading }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={ 12 } md={ 6 }>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"OidcTokenEndpoint\">Token Endpoint</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"OidcTokenEndpoint\"\r\n                  name=\"OidcTokenEndpoint\"\r\n                  value={ inputs.OidcTokenEndpoint || '' }\r\n                  onChange={ handleInputChange }\r\n                  label=\"Token Endpoint\"\r\n                  placeholder=\"输入 OIDC 的 Token Endpoint\"\r\n                  disabled={ loading }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={ 12 } md={ 6 }>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"OidcUserinfoEndpoint\">Userinfo Endpoint</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"OidcUserinfoEndpoint\"\r\n                  name=\"OidcUserinfoEndpoint\"\r\n                  value={ inputs.OidcUserinfoEndpoint || '' }\r\n                  onChange={ handleInputChange }\r\n                  label=\"Userinfo Endpoint\"\r\n                  placeholder=\"输入 OIDC 的 Userinfo Endpoint\"\r\n                  disabled={ loading }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={ 12 }>\r\n              <Button variant=\"contained\" onClick={ submitOidc }>\r\n                保存 OIDC 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n\r\n        <SubCard\r\n          title=\"配置 Message Pusher\"\r\n          subTitle={\r\n            <span>\r\n              用以推送报警信息，\r\n              <a href=\"https://github.com/songquanpeng/message-pusher\" target=\"_blank\" rel=\"noreferrer\">\r\n                点击此处\r\n              </a>\r\n              了解 Message Pusher\r\n            </span>\r\n          }\r\n        >\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"MessagePusherAddress\">Message Pusher 推送地址</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"MessagePusherAddress\"\r\n                  name=\"MessagePusherAddress\"\r\n                  value={inputs.MessagePusherAddress || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"Message Pusher 推送地址\"\r\n                  placeholder=\"例如：https://msgpusher.com/push/your_username\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"MessagePusherToken\">Message Pusher 访问凭证</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"MessagePusherToken\"\r\n                  name=\"MessagePusherToken\"\r\n                  type=\"password\"\r\n                  value={inputs.MessagePusherToken || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"Message Pusher 访问凭证\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitMessagePusher}>\r\n                保存 Message Pusher 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard\r\n          title=\"配置 Turnstile\"\r\n          subTitle={\r\n            <span>\r\n              用以支持用户校验，\r\n              <a href=\"https://dash.cloudflare.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                点击此处\r\n              </a>\r\n              管理你的 Turnstile Sites，推荐选择 Invisible Widget Type\r\n            </span>\r\n          }\r\n        >\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"TurnstileSiteKey\">Turnstile Site Key</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"TurnstileSiteKey\"\r\n                  name=\"TurnstileSiteKey\"\r\n                  value={inputs.TurnstileSiteKey || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"Turnstile Site Key\"\r\n                  placeholder=\"输入你注册的 Turnstile Site Key\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"TurnstileSecretKey\">Turnstile Secret Key</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"TurnstileSecretKey\"\r\n                  name=\"TurnstileSecretKey\"\r\n                  type=\"password\"\r\n                  value={inputs.TurnstileSecretKey || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"Turnstile Secret Key\"\r\n                  placeholder=\"敏感信息不会发送到前端显示\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitTurnstile}>\r\n                保存 Turnstile 设置\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n      </Stack>\r\n      <Dialog open={showPasswordWarningModal} onClose={() => setShowPasswordWarningModal(false)} maxWidth={'md'}>\r\n        <DialogTitle sx={{ margin: '0px', fontWeight: 700, lineHeight: '1.55556', padding: '24px', fontSize: '1.125rem' }}>\r\n          警告\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>取消密码登录将导致所有未绑定其他登录方式的用户（包括管理员）无法通过密码登录，确认取消？</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowPasswordWarningModal(false)}>取消</Button>\r\n          <Button\r\n            sx={{ color: 'error.main' }}\r\n            onClick={async () => {\r\n              setShowPasswordWarningModal(false);\r\n              await updateOption('PasswordLoginEnabled', 'false');\r\n            }}\r\n          >\r\n            确定\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SystemSetting;\r\n","import { useState, useEffect } from 'react';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport {\r\n    Stack,\r\n    FormControl,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Button,\r\n    Alert,\r\n    TextField,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogActions,\r\n    DialogContent,\r\n    Divider, Link\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport { showError, showSuccess } from 'utils/common'; //,\r\nimport { API } from 'utils/api';\r\nimport { marked } from 'marked';\r\n\r\nconst OtherSetting = () => {\r\n  let [inputs, setInputs] = useState({\r\n    Footer: '',\r\n    Notice: '',\r\n    About: '',\r\n    SystemName: '',\r\n    Logo: '',\r\n    HomePageContent: '',\r\n    Theme: '',\r\n  });\r\n  let [loading, setLoading] = useState(false);\r\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\r\n  const [updateData, setUpdateData] = useState({\r\n    tag_name: '',\r\n    content: ''\r\n  });\r\n\r\n  const getOptions = async () => {\r\n    const res = await API.get('/api/option/');\r\n    const { success, message, data } = res.data;\r\n    if (success) {\r\n      let newInputs = {};\r\n      data.forEach((item) => {\r\n        if (item.key in inputs) {\r\n          newInputs[item.key] = item.value;\r\n        }\r\n      });\r\n      setInputs(newInputs);\r\n    } else {\r\n      showError(message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getOptions().then();\r\n  }, []);\r\n\r\n  const updateOption = async (key, value) => {\r\n    setLoading(true);\r\n    const res = await API.put('/api/option/', {\r\n      key,\r\n      value\r\n    });\r\n    const { success, message } = res.data;\r\n    if (success) {\r\n      setInputs((inputs) => ({ ...inputs, [key]: value }));\r\n      showSuccess('保存成功');\r\n    } else {\r\n      showError(message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleInputChange = async (event) => {\r\n    let { name, value } = event.target;\r\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n  };\r\n\r\n  const submitNotice = async () => {\r\n    await updateOption('Notice', inputs.Notice);\r\n  };\r\n\r\n  const submitFooter = async () => {\r\n    await updateOption('Footer', inputs.Footer);\r\n  };\r\n\r\n  const submitSystemName = async () => {\r\n    await updateOption('SystemName', inputs.SystemName);\r\n  };\r\n\r\n  const submitTheme = async () => {\r\n    await updateOption('Theme', inputs.Theme);\r\n  };\r\n\r\n  const submitLogo = async () => {\r\n    await updateOption('Logo', inputs.Logo);\r\n  };\r\n\r\n  const submitAbout = async () => {\r\n    await updateOption('About', inputs.About);\r\n  };\r\n\r\n  const submitOption = async (key) => {\r\n    await updateOption(key, inputs[key]);\r\n  };\r\n\r\n  const openGitHubRelease = () => {\r\n    window.location = 'https://github.com/songquanpeng/one-api/releases/latest';\r\n  };\r\n\r\n  const checkUpdate = async () => {\r\n    const res = await API.get('https://api.github.com/repos/songquanpeng/one-api/releases/latest');\r\n    const { tag_name, body } = res.data;\r\n    if (tag_name === process.env.REACT_APP_VERSION) {\r\n      showSuccess(`已是最新版本：${tag_name}`);\r\n    } else {\r\n      setUpdateData({\r\n        tag_name: tag_name,\r\n        content: marked.parse(body)\r\n      });\r\n      setShowUpdateModal(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={2}>\r\n        <SubCard title=\"通用设置\">\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={checkUpdate}>\r\n                检查更新\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  multiline\r\n                  maxRows={15}\r\n                  id=\"Notice\"\r\n                  label=\"公告\"\r\n                  value={inputs.Notice}\r\n                  name=\"Notice\"\r\n                  onChange={handleInputChange}\r\n                  minRows={10}\r\n                  placeholder=\"在此输入新的公告内容，支持 Markdown & HTML 代码\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitNotice}>\r\n                保存公告\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n        <SubCard title=\"个性化设置\">\r\n          <Grid container spacing={{ xs: 3, sm: 2, md: 4 }}>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"SystemName\">系统名称</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"SystemName\"\r\n                  name=\"SystemName\"\r\n                  value={inputs.SystemName || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"系统名称\"\r\n                  placeholder=\"在此输入系统名称\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitSystemName}>\r\n                设置系统名称\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"Theme\">主题名称</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"Theme\"\r\n                    name=\"Theme\"\r\n                    value={inputs.Theme || ''}\r\n                    onChange={handleInputChange}\r\n                    label=\"主题名称\"\r\n                    placeholder=\"请输入主题名称\"\r\n                    disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitTheme}>\r\n                设置主题（重启生效）\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"Logo\">Logo 图片地址</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"Logo\"\r\n                  name=\"Logo\"\r\n                  value={inputs.Logo || ''}\r\n                  onChange={handleInputChange}\r\n                  label=\"Logo 图片地址\"\r\n                  placeholder=\"在此输入Logo 图片地址\"\r\n                  disabled={loading}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitLogo}>\r\n                设置 Logo\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  multiline\r\n                  maxRows={15}\r\n                  id=\"HomePageContent\"\r\n                  label=\"首页内容\"\r\n                  value={inputs.HomePageContent}\r\n                  name=\"HomePageContent\"\r\n                  onChange={handleInputChange}\r\n                  minRows={10}\r\n                  placeholder=\"在此输入首页内容，支持 Markdown & HTML 代码，设置后首页的状态信息将不再显示。如果输入的是一个链接，则会使用该链接作为 iframe 的 src 属性，这允许你设置任意网页作为首页。\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={() => submitOption('HomePageContent')}>\r\n                保存首页内容\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  multiline\r\n                  maxRows={15}\r\n                  id=\"About\"\r\n                  label=\"关于\"\r\n                  value={inputs.About}\r\n                  name=\"About\"\r\n                  onChange={handleInputChange}\r\n                  minRows={10}\r\n                  placeholder=\"在此输入新的关于内容，支持 Markdown & HTML 代码。如果输入的是一个链接，则会使用该链接作为 iframe 的 src 属性，这允许你设置任意网页作为关于页面。\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitAbout}>\r\n                保存关于\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Alert severity=\"warning\">\r\n                移除 One API 的版权标识必须首先获得授权，项目维护需要花费大量精力，如果本项目对你有意义，请主动支持本项目。\r\n              </Alert>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <FormControl fullWidth>\r\n                <TextField\r\n                  multiline\r\n                  maxRows={15}\r\n                  id=\"Footer\"\r\n                  label=\"页脚\"\r\n                  value={inputs.Footer}\r\n                  name=\"Footer\"\r\n                  onChange={handleInputChange}\r\n                  minRows={10}\r\n                  placeholder=\"在此输入新的页脚，留空则使用默认页脚，支持 HTML 代码\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid xs={12}>\r\n              <Button variant=\"contained\" onClick={submitFooter}>\r\n                设置页脚\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </SubCard>\r\n      </Stack>\r\n      <Dialog open={showUpdateModal} onClose={() => setShowUpdateModal(false)} fullWidth maxWidth={'md'}>\r\n        <DialogTitle sx={{ margin: '0px', fontWeight: 700, lineHeight: '1.55556', padding: '24px', fontSize: '1.125rem' }}>\r\n          新版本：{updateData.tag_name}\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          {' '}\r\n          <div dangerouslySetInnerHTML={{ __html: updateData.content }}></div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowUpdateModal(false)}>关闭</Button>\r\n          <Button\r\n            onClick={async () => {\r\n              setShowUpdateModal(false);\r\n              openGitHubRelease();\r\n            }}\r\n          >\r\n            去GitHub查看\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OtherSetting;\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tabs, Tab, Box, Card } from '@mui/material';\r\nimport { IconSettings2, IconActivity, IconSettings } from '@tabler/icons-react';\r\nimport OperationSetting from './component/OperationSetting';\r\nimport SystemSetting from './component/SystemSetting';\r\nimport OtherSetting from './component/OtherSetting';\r\nimport AdminContainer from 'ui-component/AdminContainer';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nfunction CustomTabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div role=\"tabpanel\" hidden={value !== index} id={`setting-tabpanel-${index}`} aria-labelledby={`setting-tab-${index}`} {...other}>\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nCustomTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `setting-tab-${index}`,\r\n    'aria-controls': `setting-tabpanel-${index}`\r\n  };\r\n}\r\n\r\nconst Setting = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const hash = location.hash.replace('#', '');\r\n  const tabMap = {\r\n    operation: 0,\r\n    system: 1,\r\n    other: 2\r\n  };\r\n  const [value, setValue] = useState(tabMap[hash] || 0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    const hashArray = Object.keys(tabMap);\r\n    navigate(`#${hashArray[newValue]}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleHashChange = () => {\r\n      const hash = location.hash.replace('#', '');\r\n      setValue(tabMap[hash] || 0);\r\n    };\r\n    window.addEventListener('hashchange', handleHashChange);\r\n    return () => {\r\n      window.removeEventListener('hashchange', handleHashChange);\r\n    };\r\n  }, [location, tabMap]);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <AdminContainer>\r\n          <Box sx={{ width: '100%' }}>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n              <Tabs value={value} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\">\r\n                <Tab label=\"运营设置\" {...a11yProps(0)} icon={<IconActivity />} iconPosition=\"start\" />\r\n                <Tab label=\"系统设置\" {...a11yProps(1)} icon={<IconSettings />} iconPosition=\"start\" />\r\n                <Tab label=\"其他设置\" {...a11yProps(2)} icon={<IconSettings2 />} iconPosition=\"start\" />\r\n              </Tabs>\r\n            </Box>\r\n            <CustomTabPanel value={value} index={0}>\r\n              <OperationSetting />\r\n            </CustomTabPanel>\r\n            <CustomTabPanel value={value} index={1}>\r\n              <SystemSetting />\r\n            </CustomTabPanel>\r\n            <CustomTabPanel value={value} index={2}>\r\n              <OtherSetting />\r\n            </CustomTabPanel>\r\n          </Box>\r\n        </AdminContainer>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Setting;\r\n"],"names":["SubCard","forwardRef","_ref","ref","children","content","contentClass","darkTitle","secondary","sx","contentSX","title","subTitle","others","theme","useTheme","_jsxs","Card","border","typography","boxShadow","_jsx","CardHeader","p","Typography","variant","action","subheader","Divider","opacity","CardContent","className","defaultProps","require","OperationSetting","now","Date","inputs","setInputs","useState","QuotaForNewUser","QuotaForInviter","QuotaForInvitee","QuotaRemindThreshold","PreConsumedQuota","ModelRatio","CompletionRatio","GroupRatio","TopUpLink","ChatLink","QuotaPerUnit","AutomaticDisableChannelEnabled","AutomaticEnableChannelEnabled","ChannelDisableThreshold","LogConsumeEnabled","DisplayInCurrencyEnabled","DisplayTokenStatEnabled","ApproximateTokenEnabled","RetryTimes","originInputs","setOriginInputs","loading","setLoading","historyTimestamp","setHistoryTimestamp","getTime","useEffect","async","res","API","get","success","message","data","newInputs","forEach","item","key","value","JSON","stringify","parse","showError","getOptions","then","updateOption","endsWith","put","handleInputChange","name","event","target","showSuccess","submitConfig","group","verifyJSON","Stack","spacing","justifyContent","alignItems","direction","sm","md","xs","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","id","onChange","label","placeholder","disabled","FormControlLabel","marginLeft","control","Checkbox","checked","Button","onClick","LocalizationProvider","dateAdapter","AdapterDayjs","adapterLocale","DateTimePicker","ampm","dayjs","newValue","unix","slotProps","actionBar","actions","delete","Math","floor","deleteHistoryLogs","type","autoComplete","TextField","multiline","maxRows","minRows","filter","createFilterOptions","SystemSetting","PasswordLoginEnabled","PasswordRegisterEnabled","EmailVerificationEnabled","GitHubOAuthEnabled","GitHubClientId","GitHubClientSecret","LarkClientId","LarkClientSecret","OidcEnabled","OidcWellKnown","OidcClientId","OidcClientSecret","OidcAuthorizationEndpoint","OidcTokenEndpoint","OidcUserinfoEndpoint","Notice","SMTPServer","SMTPPort","SMTPAccount","SMTPFrom","SMTPToken","ServerAddress","Footer","WeChatAuthEnabled","WeChatServerAddress","WeChatServerToken","WeChatAccountQRCodeImageURL","TurnstileCheckEnabled","TurnstileSiteKey","TurnstileSecretKey","RegisterEnabled","EmailDomainRestrictionEnabled","EmailDomainWhitelist","MessagePusherAddress","MessagePusherToken","setEmailDomainWhitelist","showPasswordWarningModal","setShowPasswordWarningModal","split","startsWith","_Fragment","Grid","container","removeTrailingSlash","Autocomplete","multiple","freeSolo","options","e","filterSelectedOptions","renderInput","params","filterOptions","filtered","inputValue","isExisting","some","option","push","join","href","rel","Alert","severity","wordWrap","err","Dialog","open","onClose","maxWidth","DialogTitle","margin","fontWeight","lineHeight","padding","fontSize","DialogContent","DialogActions","color","OtherSetting","About","SystemName","Logo","HomePageContent","Theme","showUpdateModal","setShowUpdateModal","updateData","setUpdateData","tag_name","body","process","REACT_APP_VERSION","marked","submitOption","dangerouslySetInnerHTML","__html","window","location","CustomTabPanel","props","index","other","role","hidden","Box","a11yProps","Setting","useLocation","navigate","useNavigate","hash","replace","tabMap","operation","system","setValue","handleHashChange","addEventListener","removeEventListener","AdminContainer","width","borderBottom","borderColor","Tabs","handleChange","hashArray","Object","keys","scrollButtons","Tab","icon","IconActivity","iconPosition","IconSettings","IconSettings2"],"sourceRoot":""}